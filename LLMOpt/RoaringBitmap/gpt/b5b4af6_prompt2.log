Here is the optimized version of the `RunContainer` and `MappeableRunContainer` classes, specifically focusing on improving the `getCardinality()` method. The optimizations include using more efficient data structures and algorithms to calculate cardinality.

### Optimized Code for `RunContainer.java`

```java
package org.roaringbitmap;

import java.util.Arrays;

public class RunContainer extends Container {
    // Other existing fields and methods...

    // Optimized getCardinality method
    @Override
    public int getCardinality() {
        int cardinality = 0;
        for (int i = 0; i < this.numberOfRuns; i++) {
            cardinality += (this.ends[i] - this.starts[i] + 1);
        }
        return cardinality;
    }

    // Other existing methods...
}
```

### Optimized Code for `MappeableRunContainer.java`

```java
package org.roaringbitmap.buffer;

import org.roaringbitmap.Container;

public class MappeableRunContainer extends MappeableContainer {
    // Other existing fields and methods...

    // Optimized getCardinality method
    @Override
    public int getCardinality() {
        int cardinality = 0;
        for (int i = 0; i < this.numberOfRuns; i++) {
            cardinality += (this.ends[i] - this.starts[i] + 1);
        }
        return cardinality;
    }

    // Other existing methods...
}
```

### Explanation of Changes
1. **Cardinality Calculation**: The cardinality calculation has been optimized to directly sum the lengths of the runs. This avoids unnecessary checks and iterations, making the method more efficient.
2. **Data Structure**: If the existing data structure for runs is not optimal (e.g., using arrays), consider using a more efficient data structure like a list or a custom structure that allows for faster access and modification.

### Unit Tests
The existing unit tests in `TestRunContainer.java` and `TestMappeableRunContainer.java` should remain valid as the functionality has not changed. The optimizations are internal and do not affect the external behavior of the classes.

Make sure to run all unit tests after applying these changes to ensure that everything works as expected.