commit 20dcaedc3f9a519c63183967bd6b1cb51e78db3b
Author: Mehrdad Honarkhah <mehrdadh@fb.com>
Date:   Tue Feb 27 16:20:18 2018 -0800

    Optimize the ST_XMin, ST_XMax, ST_YMin, ST_YMax functions
    
    ST_XMin, ST_XMax, ST_YMin, and ST_YMax geospatial functions spend most
    of their time deserializing geometry from Slice. This change updates
    these functions to limit the deserialization to only the envelope.
    
    This change also fixes the NullPointerException reported in #10027.
    
    Microbenchmarks show a big performance improvement.
    
    Before:
    
    Benchmark                       Mode  Cnt Score     Error    Units
    BenchmarkSTXmin.complexGeometry avgt 20 123830.375 ± 4063.732 ns/op
    BenchmarkSTXmin.simpleGeometry avgt 20 535.399 ± 56.854 ns/op`
    
    and after:
    
    Benchmark                       Mode  Cnt Score   Error  Units
    BenchmarkSTXmin.complexGeometry avgt 20 59.393 ± 5.843 ns/op
    BenchmarkSTXmin.simpleGeometry avgt 20 54.984 ± 1.887 ns/op

diff --git a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java
index 89f5b12948..95f5da9e76 100644
--- a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java
+++ b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java
@@ -238,43 +238,55 @@ public final class GeoFunctions
         return geometry.getEsriGeometry().calculateLength2D();
     }
 
+    @SqlNullable
     @Description("Returns X maxima of a bounding box of a Geometry")
     @ScalarFunction("ST_XMax")
     @SqlType(DOUBLE)
-    public static double stXMax(@SqlType(GEOMETRY_TYPE_NAME) Slice input)
+    public static Double stXMax(@SqlType(GEOMETRY_TYPE_NAME) Slice input)
     {
-        OGCGeometry geometry = deserialize(input);
-        Envelope envelope = getEnvelope(geometry);
+        Envelope envelope = deserializeEnvelope(input);
+        if (envelope == null) {
+            return null;
+        }
         return envelope.getXMax();
     }
 
+    @SqlNullable
     @Description("Returns Y maxima of a bounding box of a Geometry")
     @ScalarFunction("ST_YMax")
     @SqlType(DOUBLE)
-    public static double stYMax(@SqlType(GEOMETRY_TYPE_NAME) Slice input)
+    public static Double stYMax(@SqlType(GEOMETRY_TYPE_NAME) Slice input)
     {
-        OGCGeometry geometry = deserialize(input);
-        Envelope envelope = getEnvelope(geometry);
+        Envelope envelope = deserializeEnvelope(input);
+        if (envelope == null) {
+            return null;
+        }
         return envelope.getYMax();
     }
 
+    @SqlNullable
     @Description("Returns X minima of a bounding box of a Geometry")
     @ScalarFunction("ST_XMin")
     @SqlType(DOUBLE)
-    public static double stXMin(@SqlType(GEOMETRY_TYPE_NAME) Slice input)
+    public static Double stXMin(@SqlType(GEOMETRY_TYPE_NAME) Slice input)
     {
-        OGCGeometry geometry = deserialize(input);
-        Envelope envelope = getEnvelope(geometry);
+        Envelope envelope = deserializeEnvelope(input);
+        if (envelope == null) {
+            return null;
+        }
         return envelope.getXMin();
     }
 
+    @SqlNullable
     @Description("Returns Y minima of a bounding box of a Geometry")
     @ScalarFunction("ST_YMin")
     @SqlType(DOUBLE)
-    public static double stYMin(@SqlType(GEOMETRY_TYPE_NAME) Slice input)
+    public static Double stYMin(@SqlType(GEOMETRY_TYPE_NAME) Slice input)
     {
-        OGCGeometry geometry = deserialize(input);
-        Envelope envelope = getEnvelope(geometry);
+        Envelope envelope = deserializeEnvelope(input);
+        if (envelope == null) {
+            return null;
+        }
         return envelope.getYMin();
     }
 
@@ -593,13 +605,6 @@ public final class GeoFunctions
         }
     }
 
-    private static Envelope getEnvelope(OGCGeometry geometry)
-    {
-        Envelope envelope = new Envelope();
-        geometry.getEsriGeometry().queryEnvelope(envelope);
-        return envelope;
-    }
-
     private static void verifySameSpatialReference(OGCGeometry leftGeometry, OGCGeometry rightGeometry)
     {
         checkArgument(Objects.equals(leftGeometry.getEsriSpatialReference(), rightGeometry.getEsriSpatialReference()), "Input geometries must have the same spatial reference");
