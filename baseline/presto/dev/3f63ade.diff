commit 3f63ade33e303cf12c560836ec8a54b08968323f
Author: Christopher Berner <christopherberner@gmail.com>
Date:   Thu Oct 29 12:00:25 2015 -0700

    Optimize array_distinct for arrays of size <= 2
    
    Benchmark shows that this is ~7x faster for arrays of size 2
    
                (name)  Mode  Cnt Score    Error  Units
        array_distinct  avgt   10 92.300 ±  6.539  ns/op
    old_array_distinct  avgt   10 648.035 ± 37.486  ns/op

diff --git a/presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayDistinctFunction.java b/presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayDistinctFunction.java
index a25a5916e6..4ba089887c 100644
--- a/presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayDistinctFunction.java
+++ b/presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayDistinctFunction.java
@@ -72,10 +72,19 @@ public final class ArrayDistinctFunction
 
     public static Block distinct(Type type, Block array)
     {
-        if (array.getPositionCount() == 0) {
+        if (array.getPositionCount() < 2) {
             return array;
         }
 
+        if (array.getPositionCount() == 2) {
+            if (type.equalTo(array, 0, array, 1)) {
+                return array.getSingleValueBlock(0);
+            }
+            else {
+                return array;
+            }
+        }
+
         TypedSet typedSet = new TypedSet(type, array.getPositionCount());
         BlockBuilder distinctElementBlockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), array.getPositionCount());
         for (int i = 0; i < array.getPositionCount(); i++) {
