{
  "id": "2791f0f",
  "repository": "netty",
  "commit_hash": "2791f0fefac82663ca09dc8aa5dda024152c92f8",
  "source_code": "common/src/main/java/io/netty/util/concurrent/AbstractScheduledEventExecutor.java common/src/main/java/io/netty/util/concurrent/ScheduledFutureTask.java",
  "jmh_case": "microbench/src/main/java/io/netty/util/concurrent/ScheduleFutureTaskBenchmark",
  "unittest": "common/src/test/java/io/netty/util/concurrent/AbstractScheduledEventExecutorTest.java common/src/test/java/io/netty/util/concurrent/ScheduledFutureTaskTest.java",
  "description": "Currently a static AtomicLong is used to allocate a unique id whenever a task is scheduled to any event loop. This could be a source of contention if delayed tasks are scheduled at a high frequency and can be easily avoided by having a non-volatile id counter per queue."
}
