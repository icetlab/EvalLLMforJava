{
  "id": "e3ccf20",
  "repository": "apache/kafka",
  "commit_hash": "e3ccf2079463d0be6141d3a86c0499ceba8a3afa",
  "source_code": "core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala",
  "jmh_case": "AclAuthorizerBenchmark",
  "unittest": "core/src/test/scala/unit/kafka/security/authorizer",
  "persona": "You are a software performance assistant. Your task is to improve the performance of the source code.",
  "description": "the logic for checking acls is preparing a merged acl Set with 'acls = getAcls(new Resource(resource.resourceType, Resource.WildCardResource)) ++ getAcls(resource);' and then pass it as aclMatch's parameter. We found scala's Set ++ operation is very slow for example in the case that the Set on right hand of ++ has more than 100 entries. And the bad performance of ++ is due to iterating every entry of the Set on right hand of ++, in which the calculation of HashCode seems heavy. The performance of 'authorize' is important as each request delivered to broker goes through the logic, that's the reason we can't leave it as-is although the change for this proposal seems trivial."
}