diff --git a/presto-main/src/main/java/com/facebook/presto/operator/WindowOperator.java b/presto-main/src/main/java/com/facebook/presto/operator/WindowOperator.java
index 6813ba04fa..3e241d61a5 100644
--- a/presto-main/src/main/java/com/facebook/presto/operator/WindowOperator.java
+++ b/presto-main/src/main/java/com/facebook/presto/operator/WindowOperator.java
@@ -923,8 +923,27 @@ public class WindowOperator
         checkArgument(startPosition >= 0, "startPosition must be greater or equal than zero: %s", startPosition);
         checkArgument(startPosition < endPosition, "startPosition (%s) must be less than endPosition (%s)", startPosition, endPosition);
 
-        int left = startPosition;
-        int right = endPosition;
+        // The entire range is one group, fast path
+        if (comparator.test(startPosition, endPosition - 1)) {
+            return endPosition;
+        }
+
+        // Galloping search to find the search range for binary search
+        int gallopingLow = startPosition;
+        int gallopingHigh = startPosition + 1;
+        int jump = 1;
+        while (gallopingHigh < endPosition && comparator.test(startPosition, gallopingHigh)) {
+            gallopingLow = gallopingHigh;
+            jump <<= 1;
+            gallopingHigh += jump;
+        }
+        if (gallopingHigh > endPosition) {
+            gallopingHigh = endPosition;
+        }
+
+        // Binary search in range [gallopingLow, gallopingHigh]
+        int left = gallopingLow;
+        int right = gallopingHigh;
 
         while (left + 1 < right) {
             int middle = (left + right) >>> 1;
