diff --git a/presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayDistinctFunction.java b/presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayDistinctFunction.java
index a25a5916e6..4d6efe7790 100644
--- a/presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayDistinctFunction.java
+++ b/presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayDistinctFunction.java
@@ -72,19 +72,30 @@ public final class ArrayDistinctFunction
 
     public static Block distinct(Type type, Block array)
     {
-        if (array.getPositionCount() == 0) {
+        if (array.getPositionCount() <= 1) {
             return array;
         }
 
         TypedSet typedSet = new TypedSet(type, array.getPositionCount());
-        BlockBuilder distinctElementBlockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), array.getPositionCount());
+        int[] distinctPositions = new int[array.getPositionCount()];
+        int distinctCount = 0;
         for (int i = 0; i < array.getPositionCount(); i++) {
             if (!typedSet.contains(array, i)) {
                 typedSet.add(array, i);
-                type.appendTo(array, i, distinctElementBlockBuilder);
+                distinctPositions[distinctCount] = i;
+                distinctCount++;
             }
         }
 
+        if (distinctCount == array.getPositionCount()) {
+            return array;
+        }
+
+        BlockBuilder distinctElementBlockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), distinctCount);
+        for (int i = 0; i < distinctCount; i++) {
+            type.appendTo(array, distinctPositions[i], distinctElementBlockBuilder);
+        }
+
         return distinctElementBlockBuilder.build();
     }
 }
