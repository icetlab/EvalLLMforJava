diff --git a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java
index 73db90dd6d..3035710cdd 100644
--- a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java
+++ b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java
@@ -157,13 +157,14 @@ public final class GeoFunctions
         OGCGeometry geometry = deserialize(input);
         validateType("ST_Centroid", geometry, EnumSet.of(POINT, MULTI_POINT, LINE_STRING, MULTI_LINE_STRING, POLYGON, MULTI_POLYGON));
         GeometryTypeName typeName = GeometryUtils.valueOf(geometry.geometryType());
+        SpatialReference sr = geometry.getEsriSpatialReference();
         if (typeName == POINT) {
             return input;
         }
 
         int pointCount = ((MultiVertexGeometry) geometry.getEsriGeometry()).getPointCount();
         if (pointCount == 0) {
-            return serialize(createFromEsriGeometry(new Point(), geometry.getEsriSpatialReference()));
+            return serialize(createFromEsriGeometry(new Point(), sr));
         }
 
         Point centroid;
@@ -184,7 +185,7 @@ public final class GeoFunctions
             default:
                 throw new PrestoException(INVALID_FUNCTION_ARGUMENT, "Invalid typeName: " + typeName);
         }
-        return serialize(createFromEsriGeometry(centroid, geometry.getEsriSpatialReference()));
+        return serialize(createFromEsriGeometry(centroid, sr));
     }
 
     @Description("Return the coordinate dimension of the Geometry")
@@ -626,12 +627,13 @@ public final class GeoFunctions
 
     private static OGCGeometry geometryFromText(Slice input)
     {
+        String wkt = input.toStringUtf8();
         OGCGeometry geometry;
         try {
-            geometry = OGCGeometry.fromText(input.toStringUtf8());
+            geometry = OGCGeometry.fromText(wkt);
         }
         catch (IllegalArgumentException e) {
-            throw new PrestoException(INVALID_FUNCTION_ARGUMENT, "Invalid WKT: " + input.toStringUtf8(), e);
+            throw new PrestoException(INVALID_FUNCTION_ARGUMENT, "Invalid WKT: " + wkt, e);
         }
         geometry.setSpatialReference(null);
         return geometry;
