diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/reader/ByteSelectiveStreamReader.java b/presto-orc/src/main/java/com/facebook/presto/orc/reader/ByteSelectiveStreamReader.java
index 93aeb97e76..6b0fb86008 100644
--- a/presto-orc/src/main/java/com/facebook/presto/orc/reader/ByteSelectiveStreamReader.java
+++ b/presto-orc/src/main/java/com/facebook/presto/orc/reader/ByteSelectiveStreamReader.java
@@ -264,6 +264,34 @@ public class ByteSelectiveStreamReader
             return positionCount;
         }
 
+        // contiguous chunk of rows, possibly with nulls
+        if (presentStream != null && positions[positionCount - 1] == positionCount - 1) {
+            // read null flags and count non-nulls
+            int nonNullCount = 0;
+            for (int i = 0; i < positionCount; i++) {
+                boolean present = presentStream.nextBit();
+                nulls[i] = !present;
+                if (present) {
+                    nonNullCount++;
+                }
+            }
+            // read non-null values in bulk
+            byte[] nonNullValues = new byte[nonNullCount];
+            dataStream.next(nonNullValues, nonNullCount);
+            // unpack values based on null flags
+            int valueIndex = 0;
+            for (int i = 0; i < positionCount; i++) {
+                if (!nulls[i]) {
+                    values[i] = nonNullValues[valueIndex++];
+                }
+                else {
+                    values[i] = 0;
+                }
+            }
+            outputPositionCount = positionCount;
+            return positionCount;
+        }
+
         int streamPosition = 0;
         for (int i = 0; i < positionCount; i++) {
             int position = positions[i];
