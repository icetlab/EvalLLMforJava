Iâ€™ve added a fast path for POINT geometries to skip full ESRI shape serialization/deserialization and adjusted the envelope reader accordingly. This avoids the overhead of importing ESRI Point shapes when all we need are the raw coordinates.

```json
[
  {
    "filepath": "../presto/presto-geospatial-toolkit/src/main/java/com/facebook/presto/geospatial/GeometrySerde.java",
    "search": "private static void writeSimpleGeometry(DynamicSliceOutput output, GeometryType type, OGCGeometry geometry)\n    {\n        output.appendByte(type.code());\n        Geometry esriGeometry = requireNonNull(geometry.getEsriGeometry(), \"esriGeometry is null\");\n        byte[] shape = geometryToEsriShape(esriGeometry);\n        output.appendBytes(shape);\n    }",
    "replace": "private static void writeSimpleGeometry(DynamicSliceOutput output, GeometryType type, OGCGeometry geometry)\n    {\n        if (type == GeometryType.POINT) {\n            output.appendByte(type.code());\n            Geometry esriGeometry = requireNonNull(geometry.getEsriGeometry(), \"esriGeometry is null\");\n            Point point = (Point) esriGeometry;\n            double x = point.isEmpty() ? Double.NaN : point.getX();\n            double y = point.isEmpty() ? Double.NaN : point.getY();\n            output.appendDouble(x);\n            output.appendDouble(y);\n            return;\n        }\n        output.appendByte(type.code());\n        Geometry esriGeometry = requireNonNull(geometry.getEsriGeometry(), \"esriGeometry is null\");\n        byte[] shape = geometryToEsriShape(esriGeometry);\n        output.appendBytes(shape);\n    }"
  },
  {
    "filepath": "../presto/presto-geospatial-toolkit/src/main/java/com/facebook/presto/geospatial/GeometrySerde.java",
    "search": "private static OGCGeometry readSimpleGeometry(BasicSliceInput input, Slice inputSlice, GeometryType type, int length)\n    {\n        int currentPosition = toIntExact(input.position());\n        ByteBuffer geometryBuffer = inputSlice.toByteBuffer(currentPosition, length).slice();\n        input.setPosition(currentPosition + length);\n        Geometry esriGeometry = OperatorImportFromESRIShape.local().execute(0, Unknown, geometryBuffer);\n        return createFromEsriGeometry(esriGeometry, type.isMultitype());\n    }",
    "replace": "private static OGCGeometry readSimpleGeometry(BasicSliceInput input, Slice inputSlice, GeometryType type, int length)\n    {\n        if (type == GeometryType.POINT) {\n            double x = input.readDouble();\n            double y = input.readDouble();\n            if (isEsriNaN(x) || isEsriNaN(y)) {\n                return new OGCPoint(new Point(), null);\n            }\n            return new OGCPoint(new Point(x, y), null);\n        }\n        int currentPosition = toIntExact(input.position());\n        ByteBuffer geometryBuffer = inputSlice.toByteBuffer(currentPosition, length).slice();\n        input.setPosition(currentPosition + length);\n        Geometry esriGeometry = OperatorImportFromESRIShape.local().execute(0, Unknown, geometryBuffer);\n        return createFromEsriGeometry(esriGeometry, type.isMultitype());\n    }"
  },
  {
    "filepath": "../presto/presto-geospatial-toolkit/src/main/java/com/facebook/presto/geospatial/GeometrySerde.java",
    "search": "// skip type injected by esri\n        input.readInt();\n\n        double x = input.readDouble();",
    "replace": "double x = input.readDouble();"
  }
]
```