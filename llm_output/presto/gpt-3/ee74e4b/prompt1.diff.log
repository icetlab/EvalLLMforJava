Iâ€™ve tightened batch-size adjustments to clamp within [1, MAX_BATCH_SIZE], preventing invalid zero or oversized batches.

```json
[
  {
    "filepath": "../presto/presto-main/src/main/java/com/facebook/presto/operator/project/PageProcessor.java",
    "search": "if (result.isPageTooLarge()) {\n            // if the page buffer filled up, so halve the batch size and retry\n            verify(batchSize > 1);\n            projectBatchSize = projectBatchSize / 2;\n            continue;\n        }",
    "replace": "if (result.isPageTooLarge()) {\n            // if the page buffer filled up, so halve the batch size and retry (min batch size 1)\n            verify(batchSize > 1);\n            projectBatchSize = Math.max(projectBatchSize / 2, 1);\n            continue;\n        }"
  },
  {
    "filepath": "../presto/presto-main/src/main/java/com/facebook/presto/operator/project/PageProcessor.java",
    "search": "if (resultPage.getPositionCount() > 1 && (pageSize > MAX_PAGE_SIZE_IN_BYTES || expressionProfiler.isExpressionExpensive())) {\n                    projectBatchSize = projectBatchSize / 2;\n                }",
    "replace": "if (resultPage.getPositionCount() > 1 && (pageSize > MAX_PAGE_SIZE_IN_BYTES || expressionProfiler.isExpressionExpensive())) {\n                    projectBatchSize = Math.max(projectBatchSize / 2, 1);\n                }"
  },
  {
    "filepath": "../presto/presto-main/src/main/java/com/facebook/presto/operator/project/PageProcessor.java",
    "search": "if (pageSize < MIN_PAGE_SIZE_IN_BYTES && projectBatchSize < MAX_BATCH_SIZE && !expressionProfiler.isExpressionExpensive()) {\n                    projectBatchSize = projectBatchSize * 2;\n                }",
    "replace": "if (pageSize < MIN_PAGE_SIZE_IN_BYTES && projectBatchSize < MAX_BATCH_SIZE && !expressionProfiler.isExpressionExpensive()) {\n                    projectBatchSize = Math.min(projectBatchSize * 2, MAX_BATCH_SIZE);\n                }"
  }
]
```