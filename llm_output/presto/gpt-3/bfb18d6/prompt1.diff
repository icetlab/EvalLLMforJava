diff --git a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java
index cff4f39085..cd505afac8 100644
--- a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java
+++ b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java
@@ -146,6 +146,7 @@ public final class GeoFunctions
             .build();
     private static final int NUMBER_OF_DIMENSIONS = 3;
     private static final Block EMPTY_ARRAY_OF_INTS = IntegerType.INTEGER.createFixedSizeBlockBuilder(0).build();
+private static final PackedCoordinateSequenceFactory COORDINATE_SEQUENCE_FACTORY = new PackedCoordinateSequenceFactory();
 
     private static final float MIN_LATITUDE = -90;
     private static final float MAX_LATITUDE = 90;
@@ -204,7 +205,7 @@ public final class GeoFunctions
 
     private static CoordinateSequence readPointCoordinates(Block input, String functionName, boolean forbidDuplicates)
     {
-        PackedCoordinateSequenceFactory coordinateSequenceFactory = new PackedCoordinateSequenceFactory();
+        
         double[] coordinates = new double[2 * input.getPositionCount()];
         double lastX = Double.NaN;
         double lastY = Double.NaN;
@@ -222,7 +223,7 @@ public final class GeoFunctions
             double x = slice.readDouble();
             double y = slice.readDouble();
 
-            if (Double.isNaN(x) || Double.isNaN(x)) {
+            if (Double.isNaN(x) || Double.isNaN(y)) {
                 throw new PrestoException(INVALID_FUNCTION_ARGUMENT, format("Invalid input to %s: empty point at index %s", functionName, i + 1));
             }
             if (forbidDuplicates && x == lastX && y == lastY) {
@@ -236,7 +237,7 @@ public final class GeoFunctions
             coordinates[2 * i + 1] = y;
         }
 
-        return coordinateSequenceFactory.create(coordinates, 2);
+        return COORDINATE_SEQUENCE_FACTORY.create(coordinates, 2);
     }
 
     @Description("Returns a Geometry type Polygon object from Well-Known Text representation (WKT)")
