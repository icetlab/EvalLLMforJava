The overall improvement is to defer memory accounting in `PageProcessor`. The `updateRetainedSize` method is called in the `ProjectSelectedPositions` constructor, which accounts for memory before any processing begins. Since `PageProcessor`'s iterator-based processing model means work starts only when the iterator is advanced, this initial accounting is unnecessary and can be a performance overhead. By removing the call from the constructor, the memory accounting is delayed until the first page is produced or the processor yields, which aligns better with the actual memory usage pattern and avoids upfront calculation costs.

```json
[
  {
    "filepath": "../presto/presto-main/src/main/java/com/facebook/presto/operator/project/PageProcessor.java",
    "search": "            this.selectedPositions = selectedPositions;\n            this.previouslyComputedResults = new Block[projections.size()];\n            updateRetainedSize();\n        }",
    "replace": "            this.selectedPositions = selectedPositions;\n            this.previouslyComputedResults = new Block[projections.size()];\n        }"
  }
]
```