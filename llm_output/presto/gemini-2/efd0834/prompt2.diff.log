The performance improvement is achieved by deferring the memory accounting for retained pages. The initial calculation of retained page size in the `ProjectSelectedPositions` constructor is unnecessary because the processor is immediately used to produce a page. By removing this upfront calculation, we save on an expensive operation. To ensure memory accounting remains correct, the calculation is performed just before the processor yields, which is when it becomes idle and holds onto memory.

```json
[
  {
    "filepath": "../presto/presto-main/src/main/java/com/facebook/presto/operator/project/PageProcessor.java",
    "search": "            this.selectedPositions = selectedPositions;\n            this.previouslyComputedResults = new Block[projections.size()];\n            updateRetainedSize();\n        }",
    "replace": "            this.selectedPositions = selectedPositions;\n            this.previouslyComputedResults = new Block[projections.size()];\n        }"
  },
  {
    "filepath": "../presto/presto-main/src/main/java/com/facebook/presto/operator/project/PageProcessor.java",
    "search": "                if (result.isYieldFinish()) {\n                    // if we are running out of time, save the batch size and continue next time\n                    lastComputeYielded = true;\n                    lastComputeBatchSize = batchSize;\n                    return yield();\n                }",
    "replace": "                if (result.isYieldFinish()) {\n                    // if we are running out of time, save the batch size and continue next time\n                    lastComputeYielded = true;\n                    lastComputeBatchSize = batchSize;\n                    updateRetainedSize();\n                    return yield();\n                }"
  }
]
```