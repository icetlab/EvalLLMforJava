My change optimizes the `map_concat` function by adding fast paths for cases where one or both of the input maps are empty. If an input map is empty, the other map is returned directly. This avoids unnecessary allocations of `TypedSet` and `BlockBuilder`, as well as redundant data copying, improving performance for these common scenarios.

```json
[
  {
    "filepath": "../presto/presto-main/src/main/java/com/facebook/presto/operator/scalar/MapConcatFunction.java",
    "search": "    public static Block mapConcat(\n            @TypeParameter(\"K\") Type keyType,\n            @TypeParameter(\"V\") Type valueType,\n            @SqlType(\"map(K,V)\") Block leftMap,\n            @SqlType(\"map(K,V)\") Block rightMap)\n    {\n        TypedSet typedSet = new TypedSet(keyType, rightMap.getPositionCount());",
    "replace": "    public static Block mapConcat(\n            @TypeParameter(\"K\") Type keyType,\n            @TypeParameter(\"V\") Type valueType,\n            @SqlType(\"map(K,V)\") Block leftMap,\n            @SqlType(\"map(K,V)\") Block rightMap)\n    {\n        if (rightMap.getPositionCount() == 0) {\n            return leftMap;\n        }\n        if (leftMap.getPositionCount() == 0) {\n            return rightMap;\n        }\n\n        TypedSet typedSet = new TypedSet(keyType, rightMap.getPositionCount());"
  }
]
```