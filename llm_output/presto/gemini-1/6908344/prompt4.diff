diff --git a/presto-geospatial-toolkit/src/main/java/com/facebook/presto/geospatial/GeometrySerde.java b/presto-geospatial-toolkit/src/main/java/com/facebook/presto/geospatial/GeometrySerde.java
index 350f609b45..4f3a2121b6 100644
--- a/presto-geospatial-toolkit/src/main/java/com/facebook/presto/geospatial/GeometrySerde.java
+++ b/presto-geospatial-toolkit/src/main/java/com/facebook/presto/geospatial/GeometrySerde.java
@@ -42,6 +42,7 @@ import java.util.List;
 import static com.esri.core.geometry.Geometry.Type.Unknown;
 import static com.esri.core.geometry.GeometryEngine.geometryToEsriShape;
 import static com.facebook.presto.geospatial.GeometryUtils.isEsriNaN;
+import static com.facebook.presto.geospatial.GeometryUtils.translateToAVNaN;
 import static com.google.common.base.Verify.verify;
 import static java.lang.Math.toIntExact;
 import static java.util.Objects.requireNonNull;
@@ -102,6 +103,18 @@ public class GeometrySerde
     {
         output.appendByte(type.code());
         Geometry esriGeometry = requireNonNull(geometry.getEsriGeometry(), "esriGeometry is null");
+        if (type == GeometryType.POINT) {
+            Point point = (Point) esriGeometry;
+            if (point.isEmpty()) {
+                output.writeDouble(translateToAVNaN(Double.NaN));
+                output.writeDouble(translateToAVNaN(Double.NaN));
+            }
+            else {
+                output.writeDouble(point.getX());
+                output.writeDouble(point.getY());
+            }
+            return;
+        }
         byte[] shape = geometryToEsriShape(esriGeometry);
         output.appendBytes(shape);
     }
@@ -147,6 +160,16 @@ public class GeometrySerde
 
     private static OGCGeometry readSimpleGeometry(BasicSliceInput input, Slice inputSlice, GeometryType type, int length)
     {
+        if (type == GeometryType.POINT) {
+            double x = input.readDouble();
+            double y = input.readDouble();
+            Point point = new Point(x, y);
+            if (isEsriNaN(x) || isEsriNaN(y)) {
+                point.setEmpty();
+            }
+            return new OGCPoint(point, null);
+        }
+
         int currentPosition = toIntExact(input.position());
         ByteBuffer geometryBuffer = inputSlice.toByteBuffer(currentPosition, length).slice();
         input.setPosition(currentPosition + length);
@@ -257,8 +280,7 @@ public class GeometrySerde
 
     private static Envelope getPointEnvelope(BasicSliceInput input)
     {
-        // skip type injected by esri
-        input.readInt();
+        // The ESRI type is NOT serialized for points, so no need to skip it
 
         double x = input.readDouble();
         double y = input.readDouble();
diff --git a/presto-geospatial-toolkit/src/main/java/com/facebook/presto/geospatial/JtsGeometrySerde.java b/presto-geospatial-toolkit/src/main/java/com/facebook/presto/geospatial/JtsGeometrySerde.java
index 0030a0bf84..08bfb07e59 100644
--- a/presto-geospatial-toolkit/src/main/java/com/facebook/presto/geospatial/JtsGeometrySerde.java
+++ b/presto-geospatial-toolkit/src/main/java/com/facebook/presto/geospatial/JtsGeometrySerde.java
@@ -79,7 +79,7 @@ public class JtsGeometrySerde
     private static Point readPoint(SliceInput input, boolean skipType)
     {
         if (skipType) {
-            skipEsriType(input);
+            // The ESRI type is NOT serialized for points, so no need to skip it
         }
         Coordinate coordinates = readCoordinate(input);
         if (isEsriNaN(coordinates.x) || isEsriNaN(coordinates.y)) {
@@ -280,7 +280,6 @@ public class JtsGeometrySerde
     private static void writePoint(Point point, SliceOutput output)
     {
         output.writeByte(GeometryType.POINT.code());
-        output.writeInt(EsriShapeType.POINT.code);
         if (!point.isEmpty()) {
             writeCoordinate(point.getCoordinate(), output);
         }
