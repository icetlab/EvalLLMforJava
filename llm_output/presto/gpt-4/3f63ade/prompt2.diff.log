The change adds fast‚Äêpaths for arrays of length 1 (no work) and length 2 (single comparison and minimal block building), falling back to the general algorithm otherwise.

```json
[
  {
    "filepath": "../presto/presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayDistinctFunction.java",
    "search": "if (array.getPositionCount() == 0) {\n            return array;\n        }",
    "replace": "if (array.getPositionCount() == 0) {\n            return array;\n        }\n        if (array.getPositionCount() == 1) {\n            return array;\n        }\n        if (array.getPositionCount() == 2) {\n            // optimized for two elements\n            if (type.equalTo(array, 0, array, 1)) {\n                BlockBuilder builder = type.createBlockBuilder(new BlockBuilderStatus(), 1);\n                type.appendTo(array, 0, builder);\n                return builder.build();\n            }\n            return array;\n        }"
  }
]
```