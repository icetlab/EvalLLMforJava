Iâ€™ve added fast paths for arrays of length 1 and 2 to avoid the general `TypedSet` logic, significantly reducing overhead for these small cases.

```json
[
  {
    "filepath": "../presto/presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayDistinctFunction.java",
    "search": "        if (array.getPositionCount() == 0) {\n            return array;\n        }\n\n        TypedSet typedSet = new TypedSet(type, array.getPositionCount());",
    "replace": "        if (array.getPositionCount() == 0) {\n            return array;\n        }\n        int positionCount = array.getPositionCount();\n        if (positionCount == 1) {\n            return array;\n        }\n        if (positionCount == 2) {\n            if (type.equalTo(array, 0, array, 1)) {\n                BlockBuilder blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 1);\n                type.appendTo(array, 0, blockBuilder);\n                return blockBuilder.build();\n            }\n            return array;\n        }\n\n        TypedSet typedSet = new TypedSet(type, array.getPositionCount());"
  }
]
```