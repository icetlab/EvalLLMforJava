I have optimized `getPartition` to use a fast bitmask path when `partitionCount` is a power of two, avoiding the expensive modulus operation in that common case.

```json
[
  {
    "filepath": "../presto/presto-main/src/main/java/com/facebook/presto/operator/HashGenerator.java",
    "search": "default int getPartition(int partitionCount, int position, Page page)\n    {\n        long rawHash = hashPosition(position, page);\n\n        // clear the sign bit\n        rawHash &= 0x7fff_ffff_ffff_ffffL;\n\n        int partition = (int) (rawHash % partitionCount);\n\n        checkState(partition >= 0 && partition < partitionCount);\n        return partition;\n    }",
    "replace": "default int getPartition(int partitionCount, int position, Page page)\n    {\n        long rawHash = hashPosition(position, page);\n\n        // clear the sign bit\n        long hash = rawHash & 0x7fff_ffff_ffff_ffffL;\n\n        int partition;\n        // fast path for power-of-two partition counts\n        if ((partitionCount & (partitionCount - 1)) == 0) {\n            partition = (int) (hash & (partitionCount - 1));\n        } else {\n            partition = (int) (hash % partitionCount);\n        }\n\n        checkState(partition >= 0 && partition < partitionCount);\n        return partition;\n    }"
  }
]
```