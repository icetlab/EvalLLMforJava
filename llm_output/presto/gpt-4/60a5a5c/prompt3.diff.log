I have removed the unnecessary full-buffer copy in `PagesSerde.serialize` when neither compression nor encryption is enabled, which avoids one memory allocation and copy per page for the common uncompressed/unencrypted case.

```json
[
  {
    "filepath": "../presto/presto-main/src/main/java/com/facebook/presto/execution/buffer/PagesSerde.java",
    "search": "if (spillCipher.isPresent()) {\n            slice = Slices.wrappedBuffer(spillCipher.get().encrypt(slice.toByteBuffer()));\n            markers = ENCRYPTED.set(markers);\n        }\n        else {\n            //  Encryption disabled, slice data is likely much smaller than its backing buffer\n            //  either because of compression or dynamic sizing of the initial output slice\n            slice = Slices.copyOf(slice);\n        }",
    "replace": "if (spillCipher.isPresent()) {\n            slice = Slices.wrappedBuffer(spillCipher.get().encrypt(slice.toByteBuffer()));\n            markers = ENCRYPTED.set(markers);\n        }\n        else if (compressor.isPresent()) {\n            // slice may be compressed but not encrypted, trim to exact size\n            slice = Slices.copyOf(slice);\n        }\n        // if neither compression nor encryption, original slice already exact"
  }
]
```