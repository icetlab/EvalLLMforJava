diff --git a/presto-main/src/main/java/com/facebook/presto/tdigest/TDigest.java b/presto-main/src/main/java/com/facebook/presto/tdigest/TDigest.java
index ce0ca747f2..87c49997e9 100644
--- a/presto-main/src/main/java/com/facebook/presto/tdigest/TDigest.java
+++ b/presto-main/src/main/java/com/facebook/presto/tdigest/TDigest.java
@@ -237,6 +237,33 @@ public class TDigest
             return;
         }
 
+        // fast path: if no existing centroids and few pending points, just sort and adopt them directly
+        if (activeCentroids == 0 && tempUsed <= compression) {
+            int count = tempUsed;
+            // initialize order 0..count-1
+            for (int i = 0; i < count; i++) {
+                order[i] = i;
+            }
+            // sort pending values
+            sort(order, tempMean, count);
+            // reverse every other merge to avoid bias
+            if (mergeCount % 2 == 1) {
+                reverse(order, 0, count);
+            }
+            // adopt weights and means directly
+            totalWeight += unmergedWeight;
+            for (int i = 0; i < count; i++) {
+                int idx = order[i];
+                mean[i] = tempMean[idx];
+                weight[i] = tempWeight[idx];
+            }
+            activeCentroids = count;
+            tempUsed = 0;
+            unmergedWeight = 0;
+            mergeCount++;
+            return;
+        }
+
         if (force || unmergedWeight > 0) {
             // note that we run the merge in reverse every other merge to avoid left-to-right bias in merging
             merge(tempMean, tempWeight, tempUsed, order, unmergedWeight, mergeCount % 2 == 1, compression);
