I’ve added a quick bounding‐box check using `Envelope` to short-circuit non‐intersecting cases before performing the expensive full-geometry intersection test.

```json
[
  {
    "filepath": "../presto/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java",
    "search": "@ScalarFunction(\"ST_Intersects\")\n    @SqlType(StandardTypes.BOOLEAN)\n    public static Boolean stIntersects(@SqlType(GEOMETRY_TYPE_NAME) Slice left, @SqlType(GEOMETRY_TYPE_NAME) Slice right)\n    {\n        OGCGeometry leftGeometry = deserialize(left);\n        OGCGeometry rightGeometry = deserialize(right);\n        verifySameSpatialReference(leftGeometry, rightGeometry);\n        return leftGeometry.intersects(rightGeometry);\n    }",
    "replace": "@ScalarFunction(\"ST_Intersects\")\n    @SqlType(StandardTypes.BOOLEAN)\n    public static Boolean stIntersects(@SqlType(GEOMETRY_TYPE_NAME) Slice left, @SqlType(GEOMETRY_TYPE_NAME) Slice right)\n    {\n        // Quick reject via 2D bounding boxes\n        Envelope leftEnvelope = deserializeEnvelope(left);\n        Envelope rightEnvelope = deserializeEnvelope(right);\n        if (leftEnvelope == null || rightEnvelope == null\n                || leftEnvelope.getXMax() < rightEnvelope.getXMin()\n                || leftEnvelope.getXMin() > rightEnvelope.getXMax()\n                || leftEnvelope.getYMax() < rightEnvelope.getYMin()\n                || leftEnvelope.getYMin() > rightEnvelope.getYMax()) {\n            return false;\n        }\n        OGCGeometry leftGeometry = deserialize(left);\n        OGCGeometry rightGeometry = deserialize(right);\n        verifySameSpatialReference(leftGeometry, rightGeometry);\n        return leftGeometry.intersects(rightGeometry);\n    }"
  }
]
```