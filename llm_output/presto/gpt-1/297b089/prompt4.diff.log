Here’s a small refactoring to restore the original, adaptive batch-mode logic (instead of the unconditional `return true`), so that when we’re reading many values in a row—or have CHAR types that need truncation—we skip the big vector decode and fall back to the lighter per-position path. This should significantly cut down on unnecessary length‐vector reads in the common “scan most rows” scenarios.

```json
[
  {
    "filepath": "../presto/presto-orc/src/main/java/com/facebook/presto/orc/reader/SliceDirectSelectiveStreamReader.java",
    "search": "private boolean useBatchMode(int positionCount, int totalPositionCount)\n    {\n        return true;\n        // maxCodePointCount < 0 means it's unbounded varchar VARCHAR.\n        // If the types are VARCHAR(N) or CHAR(N), the length of the string need to be calculated and truncated.\n//        if (lengthStream == null || maxCodePointCount >= 0) {\n//            return false;\n//        }\n//\n//        double inputFilterRate = (double) (totalPositionCount - positionCount) / totalPositionCount;\n//        if (filter == null) {  // readNoFilter\n//            // When there is no filter, batch mode performs better for almost all inputFilterRate.\n//            // But to limit data buffer size, we enable it for the range of [0.0f, 0.5f]\n//            if (inputFilterRate >= 0.0f && inputFilterRate <= 0.5f) {\n//                return true;\n//            }\n//\n//            return false;\n//        }\n//        else { // readWithFilter\n//            // When there is filter, batch mode performs better for almost all inputFilterRate except when inputFilterRate is around 0.1f.\n//            // To limit data buffer size, we enable it for the range of [0.0f, 0.05f] and [0.15f, 0.5f]\n//            if (inputFilterRate >= 0.0f && inputFilterRate <= 0.05f || inputFilterRate >= 0.15f && inputFilterRate <= 0.5f) {\n//                return true;\n//            }\n//\n//            return false;\n//        }\n    }",
    "replace": "private boolean useBatchMode(int positionCount, int totalPositionCount)\n    {\n        // Disable batch mode for CHAR types (need per-string truncation) or when there is no length stream\n        if (lengthStream == null || maxCodePointCount >= 0) {\n            return false;\n        }\n\n        double inputFilterRate = (double) (totalPositionCount - positionCount) / totalPositionCount;\n        if (filter == null) { // readNoFilter: batch when skipping ≤50%\n            return inputFilterRate <= 0.5;\n        }\n        else { // readWithFilter: batch when skipping ≤5% or between 15%–50%\n            return inputFilterRate <= 0.05 || (inputFilterRate >= 0.15 && inputFilterRate <= 0.5);\n        }\n    }"
  }
]
```