diff --git a/presto-main/src/main/java/com/facebook/presto/operator/scalar/MapConcatFunction.java b/presto-main/src/main/java/com/facebook/presto/operator/scalar/MapConcatFunction.java
index 24e83bddde..b46831bc04 100644
--- a/presto-main/src/main/java/com/facebook/presto/operator/scalar/MapConcatFunction.java
+++ b/presto-main/src/main/java/com/facebook/presto/operator/scalar/MapConcatFunction.java
@@ -40,14 +40,21 @@ public final class MapConcatFunction
             @SqlType("map(K,V)") Block leftMap,
             @SqlType("map(K,V)") Block rightMap)
     {
-        TypedSet typedSet = new TypedSet(keyType, rightMap.getPositionCount());
-        BlockBuilder blockBuilder = new InterleavedBlockBuilder(ImmutableList.of(keyType, valueType), new BlockBuilderStatus(), leftMap.getPositionCount() + rightMap.getPositionCount());
-        for (int i = 0; i < rightMap.getPositionCount(); i += 2) {
+        int rightPositionCount = rightMap.getPositionCount();
+        int leftPositionCount = leftMap.getPositionCount();
+        int rightEntries = rightPositionCount >> 1;
+        TypedSet typedSet = new TypedSet(keyType, rightEntries);
+        BlockBuilderStatus status = new BlockBuilderStatus();
+        BlockBuilder blockBuilder = new InterleavedBlockBuilder(
+                ImmutableList.of(keyType, valueType),
+                status,
+                leftPositionCount + rightPositionCount);
+        for (int i = 0; i < rightPositionCount; i += 2) {
             typedSet.add(rightMap, i);
             keyType.appendTo(rightMap, i, blockBuilder);
             valueType.appendTo(rightMap, i + 1, blockBuilder);
         }
-        for (int i = 0; i < leftMap.getPositionCount(); i += 2) {
+        for (int i = 0; i < leftPositionCount; i += 2) {
             if (!typedSet.contains(leftMap, i)) {
                 keyType.appendTo(leftMap, i, blockBuilder);
                 valueType.appendTo(leftMap, i + 1, blockBuilder);
