Iâ€™ve replaced the `invokeExact` call in the `seekKeyExact(Slice)` method with a plain `invoke` call so that the generic equals path is used (which avoids creating a new `Slice` per comparison), reducing garbage churn without altering functionality.

```json
[
  {
    "filepath": "../presto/presto-common/src/main/java/com/facebook/presto/common/block/SingleMapBlock.java",
    "search": "match = (Boolean) mapBlock.keyBlockNativeEquals.invokeExact(mapBlock.getRawKeyBlock(), offset / 2 + keyPosition, nativeValue);",
    "replace": "match = (Boolean) mapBlock.keyBlockNativeEquals.invoke(mapBlock.getRawKeyBlock(), offset / 2 + keyPosition, nativeValue);"
  }
]
```