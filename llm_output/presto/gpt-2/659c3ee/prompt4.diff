diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/reader/ByteSelectiveStreamReader.java b/presto-orc/src/main/java/com/facebook/presto/orc/reader/ByteSelectiveStreamReader.java
index 93aeb97e76..e74f4e418c 100644
--- a/presto-orc/src/main/java/com/facebook/presto/orc/reader/ByteSelectiveStreamReader.java
+++ b/presto-orc/src/main/java/com/facebook/presto/orc/reader/ByteSelectiveStreamReader.java
@@ -264,6 +264,27 @@ public class ByteSelectiveStreamReader
             return positionCount;
         }
 
+        // fast path: contiguous chunk with nulls
+        if (presentStream != null && positions[0] == 0 && positions[positionCount - 1] == positionCount - 1) {
+            // read null mask
+            int nonNullCount = 0;
+            for (int i = 0; i < positionCount; i++) {
+                boolean present = presentStream.nextBit();
+                nulls[i] = !present;
+                if (present) {
+                    nonNullCount++;
+                }
+            }
+            // read only the non-null bytes
+            byte[] nonNullValues = new byte[nonNullCount];
+            dataStream.next(nonNullValues, nonNullCount);
+            // unpack into full values array
+            byte[] unpacked = ReaderUtils.unpackByteNulls(nonNullValues, nulls);
+            System.arraycopy(unpacked, 0, values, 0, positionCount);
+            outputPositionCount = positionCount;
+            return positionCount;
+        }
+
         int streamPosition = 0;
         for (int i = 0; i < positionCount; i++) {
             int position = positions[i];
