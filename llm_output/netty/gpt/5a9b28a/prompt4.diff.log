The changes below adjust the local per‐thread handle buffering to use a single‐end stack (push via addFirst, pop via pollLast) instead of FIFO (pollFirst). This avoids the hotspot on ArrayDeque::pollFirst and keeps the original FIFO ordering semantics.

```json
[
  {
    "filepath": "../netty/common/src/main/java/io/netty/util/Recycler.java",
    "search": "DefaultHandle<T> handle = batch.pollFirst();",
    "replace": "DefaultHandle<T> handle = batch.pollLast();"
  },
  {
    "filepath": "../netty/common/src/main/java/io/netty/util/Recycler.java",
    "search": "public void accept(DefaultHandle<T> e) {\n            batch.addLast(e);\n        }",
    "replace": "public void accept(DefaultHandle<T> e) {\n            batch.addFirst(e);\n        }"
  }
]
```