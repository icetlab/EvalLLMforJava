diff --git a/common/src/main/java/io/netty/util/concurrent/AbstractScheduledEventExecutor.java b/common/src/main/java/io/netty/util/concurrent/AbstractScheduledEventExecutor.java
index c132aa5b20..c97fa5ff83 100644
--- a/common/src/main/java/io/netty/util/concurrent/AbstractScheduledEventExecutor.java
+++ b/common/src/main/java/io/netty/util/concurrent/AbstractScheduledEventExecutor.java
@@ -48,10 +48,16 @@ public abstract class AbstractScheduledEventExecutor extends AbstractEventExecut
     long nextTaskId;
 
     protected AbstractScheduledEventExecutor() {
+        scheduledTaskQueue = new DefaultPriorityQueue<ScheduledFutureTask<?>>(  
+                SCHEDULED_FUTURE_TASK_COMPARATOR,
+                11);
     }
 
     protected AbstractScheduledEventExecutor(EventExecutorGroup parent) {
         super(parent);
+        scheduledTaskQueue = new DefaultPriorityQueue<ScheduledFutureTask<?>>(  
+                SCHEDULED_FUTURE_TASK_COMPARATOR,
+                11);
     }
 
     protected static long nanoTime() {
@@ -140,7 +146,11 @@ public abstract class AbstractScheduledEventExecutor extends AbstractEventExecut
      */
     protected final long nextScheduledTaskNano() {
         ScheduledFutureTask<?> scheduledTask = peekScheduledTask();
-        return scheduledTask != null ? Math.max(0, scheduledTask.deadlineNanos() - nanoTime()) : -1;
+        if (scheduledTask == null) {
+            return -1;
+        }
+        long delay = scheduledTask.deadlineNanos() - nanoTime();
+        return delay <= 0 ? 0 : delay;
     }
 
     /**
diff --git a/common/src/main/java/io/netty/util/concurrent/ScheduledFutureTask.java b/common/src/main/java/io/netty/util/concurrent/ScheduledFutureTask.java
index 5ffe824119..ca82c0e5b6 100644
--- a/common/src/main/java/io/netty/util/concurrent/ScheduledFutureTask.java
+++ b/common/src/main/java/io/netty/util/concurrent/ScheduledFutureTask.java
@@ -109,7 +109,8 @@ final class ScheduledFutureTask<V> extends PromiseTask<V> implements ScheduledFu
     }
 
     static long deadlineToDelayNanos(long deadlineNanos) {
-        return Math.max(0, deadlineNanos - nanoTime());
+        long diff = deadlineNanos - nanoTime();
+        return diff <= 0 ? 0 : diff;
     }
 
     public long delayNanos(long currentTimeNanos) {
