Iâ€™ve added a fast path in `encodeComponent` to detect when all characters are unreserved and append the entire sequence at once, bypassing per-character encoding. This should improve performance for common ASCII inputs.

```json
[
  {
    "filepath": "../netty/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringEncoder.java",
    "search": "    private void encodeComponent(CharSequence s) {\n        if (charset == null) {\n            encodeUtf8Component(s);\n        } else {\n            encodeNonUtf8Component(s);\n        }\n    }",
    "replace": "    private void encodeComponent(CharSequence s) {\n        // fast-path: if all characters are unreserved, append in one go\n        int len = s.length();\n        boolean allUnreserved = true;\n        for (int i = 0; i < len; i++) {\n            if (!dontNeedEncoding(s.charAt(i))) {\n                allUnreserved = false;\n                break;\n            }\n        }\n        if (allUnreserved) {\n            uriBuilder.append(s);\n            return;\n        }\n        if (charset == null) {\n            encodeUtf8Component(s);\n        } else {\n            encodeNonUtf8Component(s);\n        }\n    }"
  }
]
```