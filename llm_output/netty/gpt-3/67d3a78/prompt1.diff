diff --git a/common/src/main/java/io/netty/util/internal/PlatformDependent0.java b/common/src/main/java/io/netty/util/internal/PlatformDependent0.java
index 3c6012601f..210a2e455c 100644
--- a/common/src/main/java/io/netty/util/internal/PlatformDependent0.java
+++ b/common/src/main/java/io/netty/util/internal/PlatformDependent0.java
@@ -405,24 +405,28 @@ final class PlatformDependent0 {
     }
 
     static void copyMemory(long srcAddr, long dstAddr, long length) {
-        //UNSAFE.copyMemory(srcAddr, dstAddr, length);
-        while (length > 0) {
-            long size = Math.min(length, UNSAFE_COPY_THRESHOLD);
-            UNSAFE.copyMemory(srcAddr, dstAddr, size);
-            length -= size;
-            srcAddr += size;
-            dstAddr += size;
+        long threshold = UNSAFE_COPY_THRESHOLD;
+        while (length > threshold) {
+            UNSAFE.copyMemory(srcAddr, dstAddr, threshold);
+            length -= threshold;
+            srcAddr += threshold;
+            dstAddr += threshold;
+        }
+        if (length > 0) {
+            UNSAFE.copyMemory(srcAddr, dstAddr, length);
         }
     }
 
     static void copyMemory(Object src, long srcOffset, Object dst, long dstOffset, long length) {
-        //UNSAFE.copyMemory(src, srcOffset, dst, dstOffset, length);
-        while (length > 0) {
-            long size = Math.min(length, UNSAFE_COPY_THRESHOLD);
-            UNSAFE.copyMemory(src, srcOffset, dst, dstOffset, size);
-            length -= size;
-            srcOffset += size;
-            dstOffset += size;
+        long threshold = UNSAFE_COPY_THRESHOLD;
+        while (length > threshold) {
+            UNSAFE.copyMemory(src, srcOffset, dst, dstOffset, threshold);
+            length -= threshold;
+            srcOffset += threshold;
+            dstOffset += threshold;
+        }
+        if (length > 0) {
+            UNSAFE.copyMemory(src, srcOffset, dst, dstOffset, length);
         }
     }
 
