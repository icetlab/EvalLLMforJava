diff --git a/common/src/main/java/io/netty/util/NetUtil.java b/common/src/main/java/io/netty/util/NetUtil.java
index fbe09ea676..5bb1c6393d 100644
--- a/common/src/main/java/io/netty/util/NetUtil.java
+++ b/common/src/main/java/io/netty/util/NetUtil.java
@@ -859,31 +859,11 @@ public final class NetUtil {
             bytes[currentIndex++] = (byte) ((((value >> 8) & 0xf) << 4) | ((value >> 12) & 0xf));
         }
 
-        i = currentIndex + compressLength;
-        if (needsShift || i >= bytes.length) {
-            // Right shift array
-            if (i >= bytes.length) {
-                ++compressBegin;
-            }
-            for (i = currentIndex; i < bytes.length; ++i) {
-                for (begin = bytes.length - 1; begin >= compressBegin; --begin) {
-                    bytes[begin] = bytes[begin - 1];
-                }
-                bytes[begin] = 0;
-                ++compressBegin;
-            }
-        } else {
-            // Selectively move elements
-            for (i = 0; i < compressLength; ++i) {
-                begin = i + compressBegin;
-                currentIndex = begin + compressLength;
-                if (currentIndex < bytes.length) {
-                    bytes[currentIndex] = bytes[begin];
-                    bytes[begin] = 0;
-                } else {
-                    break;
-                }
-            }
+        if (compressLength > 0) {
+            int amountToMove = currentIndex - compressBegin;
+            int destinationPosition = bytes.length - amountToMove;
+            System.arraycopy(bytes, compressBegin, bytes, destinationPosition, amountToMove);
+            java.util.Arrays.fill(bytes, compressBegin, destinationPosition, (byte) 0);
         }
 
         if (ipv4Separators > 0) {
