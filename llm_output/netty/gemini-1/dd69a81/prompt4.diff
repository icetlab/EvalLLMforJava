diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/HttpRequestEncoder.java b/codec-http/src/main/java/io/netty/handler/codec/http/HttpRequestEncoder.java
index 0db8a4ce34..58dbe75411 100644
--- a/codec-http/src/main/java/io/netty/handler/codec/http/HttpRequestEncoder.java
+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpRequestEncoder.java
@@ -42,6 +42,7 @@ public class HttpRequestEncoder extends HttpObjectEncoder<HttpRequest> {
         // Add / as absolute path if no is present.
         // See http://tools.ietf.org/html/rfc2616#section-5.1.2
         String uri = request.uri();
+        boolean wroteUri = false;
 
         if (uri.isEmpty()) {
             uri += SLASH;
@@ -58,18 +59,18 @@ public class HttpRequestEncoder extends HttpObjectEncoder<HttpRequest> {
                     }
                 } else {
                     if (uri.lastIndexOf(SLASH, index) <= startIndex) {
-                        int len = uri.length();
-                        StringBuilder sb = new StringBuilder(len + 1);
-                        sb.append(uri, 0, index)
-                          .append(SLASH)
-                          .append(uri, index, len);
-                        uri = sb.toString();
+                        ByteBufUtil.writeUtf8(buf, uri, 0, index);
+                        buf.writeByte(SLASH);
+                        ByteBufUtil.writeUtf8(buf, uri, index, uri.length());
+                        wroteUri = true;
                     }
                 }
             }
         }
 
+        if (!wroteUri) {
             buf.writeCharSequence(uri, CharsetUtil.UTF_8);
+        }
 
         buf.writeByte(SP);
         request.protocolVersion().encode(buf);
