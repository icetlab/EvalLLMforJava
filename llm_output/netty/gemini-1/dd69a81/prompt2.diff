diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/HttpRequestEncoder.java b/codec-http/src/main/java/io/netty/handler/codec/http/HttpRequestEncoder.java
index 0db8a4ce34..e8ece3242b 100644
--- a/codec-http/src/main/java/io/netty/handler/codec/http/HttpRequestEncoder.java
+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpRequestEncoder.java
@@ -44,8 +44,9 @@ public class HttpRequestEncoder extends HttpObjectEncoder<HttpRequest> {
         String uri = request.uri();
 
         if (uri.isEmpty()) {
-            uri += SLASH;
+            buf.writeByte(SLASH);
         } else {
+            int slashInsertionPoint = -1;
             int start = uri.indexOf("://");
             if (start != -1 && uri.charAt(0) != SLASH) {
                 int startIndex = start + 3;
@@ -54,22 +55,23 @@ public class HttpRequestEncoder extends HttpObjectEncoder<HttpRequest> {
                 int index = uri.indexOf(QUESTION_MARK, startIndex);
                 if (index == -1) {
                     if (uri.lastIndexOf(SLASH) <= startIndex) {
-                        uri += SLASH;
+                        slashInsertionPoint = uri.length();
                     }
                 } else {
                     if (uri.lastIndexOf(SLASH, index) <= startIndex) {
-                        int len = uri.length();
-                        StringBuilder sb = new StringBuilder(len + 1);
-                        sb.append(uri, 0, index)
-                          .append(SLASH)
-                          .append(uri, index, len);
-                        uri = sb.toString();
-                    }
+                        slashInsertionPoint = index;
                     }
                 }
             }
 
+            if (slashInsertionPoint > -1) {
+                buf.writeCharSequence(uri, 0, slashInsertionPoint, CharsetUtil.UTF_8);
+                buf.writeByte(SLASH);
+                buf.writeCharSequence(uri, slashInsertionPoint, uri.length() - slashInsertionPoint, CharsetUtil.UTF_8);
+            } else {
                 buf.writeCharSequence(uri, CharsetUtil.UTF_8);
+            }
+        }
 
         buf.writeByte(SP);
         request.protocolVersion().encode(buf);
