I’m replacing the generic CharSequenceMap lookup in getIndex(...) with a compile‐time string switch over all known header names. This eliminates hashmap/trie overhead and leverages Java’s optimized switch-on-string bytecode for a perfect hash–like lookup.

```json
[
  {
    "filepath": "../netty/codec-http2/src/main/java/io/netty/handler/codec/http2/HpackStaticTable.java",
    "search": "static int getIndex(CharSequence name) {\n        Integer index = STATIC_INDEX_BY_NAME.get(name);\n        if (index == null) {\n            return NOT_FOUND;\n        }\n        return index;\n    }",
    "replace": "static int getIndex(CharSequence name) {\n        if (name == null) {\n            return NOT_FOUND;\n        }\n        String key = name.toString();\n        switch (key) {\n            case \":authority\": return 1;\n            case \":method\": return 2;\n            case \":path\": return 4;\n            case \":scheme\": return 6;\n            case \":status\": return 8;\n            case \"accept-charset\": return 15;\n            case \"accept-encoding\": return 16;\n            case \"accept-language\": return 17;\n            case \"accept-ranges\": return 18;\n            case \"accept\": return 19;\n            case \"access-control-allow-origin\": return 20;\n            case \"age\": return 21;\n            case \"allow\": return 22;\n            case \"authorization\": return 23;\n            case \"cache-control\": return 24;\n            case \"content-disposition\": return 25;\n            case \"content-encoding\": return 26;\n            case \"content-language\": return 27;\n            case \"content-length\": return 28;\n            case \"content-location\": return 29;\n            case \"content-range\": return 30;\n            case \"content-type\": return 31;\n            case \"cookie\": return 32;\n            case \"date\": return 33;\n            case \"etag\": return 34;\n            case \"expect\": return 35;\n            case \"expires\": return 36;\n            case \"from\": return 37;\n            case \"host\": return 38;\n            case \"if-match\": return 39;\n            case \"if-modified-since\": return 40;\n            case \"if-none-match\": return 41;\n            case \"if-range\": return 42;\n            case \"if-unmodified-since\": return 43;\n            case \"last-modified\": return 44;\n            case \"link\": return 45;\n            case \"location\": return 46;\n            case \"max-forwards\": return 47;\n            case \"proxy-authenticate\": return 48;\n            case \"proxy-authorization\": return 49;\n            case \"range\": return 50;\n            case \"referer\": return 51;\n            case \"refresh\": return 52;\n            case \"retry-after\": return 53;\n            case \"server\": return 54;\n            case \"set-cookie\": return 55;\n            case \"strict-transport-security\": return 56;\n            case \"transfer-encoding\": return 57;\n            case \"user-agent\": return 58;\n            case \"vary\": return 59;\n            case \"via\": return 60;\n            case \"www-authenticate\": return 61;\n            default: return NOT_FOUND;\n        }\n    }"
  }
]
```