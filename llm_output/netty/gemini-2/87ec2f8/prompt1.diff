diff --git a/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java
index e7afab3672..8e686e9944 100644
--- a/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java
+++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java
@@ -536,16 +536,11 @@ public final class ByteBufUtil {
                     buffer._setByte(writerIndex++, WRITE_UTF_UNKNOWN);
                     continue;
                 }
-                final char c2;
-                try {
-                    // Surrogate Pair consumes 2 characters. Optimistically try to get the next character to avoid
-                    // duplicate bounds checking with charAt. If an IndexOutOfBoundsException is thrown we will
-                    // re-throw a more informative exception describing the problem.
-                    c2 = seq.charAt(++i);
-                } catch (IndexOutOfBoundsException ignored) {
+                if (i >= len - 1) {
                     buffer._setByte(writerIndex++, WRITE_UTF_UNKNOWN);
                     break;
                 }
+                final char c2 = seq.charAt(++i);
                 if (!Character.isLowSurrogate(c2)) {
                     buffer._setByte(writerIndex++, WRITE_UTF_UNKNOWN);
                     buffer._setByte(writerIndex++, Character.isHighSurrogate(c2) ? WRITE_UTF_UNKNOWN : c2);
@@ -615,16 +610,12 @@ public final class ByteBufUtil {
                     // WRITE_UTF_UNKNOWN
                     continue;
                 }
-                final char c2;
-                try {
-                    // Surrogate Pair consumes 2 characters. Optimistically try to get the next character to avoid
-                    // duplicate bounds checking with charAt.
-                    c2 = seq.charAt(++i);
-                } catch (IndexOutOfBoundsException ignored) {
+                if (i >= length - 1) {
                     encodedLength++;
                     // WRITE_UTF_UNKNOWN
                     break;
                 }
+                final char c2 = seq.charAt(++i);
                 if (!Character.isLowSurrogate(c2)) {
                     // WRITE_UTF_UNKNOWN + (Character.isHighSurrogate(c2) ? WRITE_UTF_UNKNOWN : c2)
                     encodedLength += 2;
@@ -1325,6 +1316,13 @@ public final class ByteBufUtil {
      */
     private static boolean isUtf8(ByteBuf buf, int index, int length) {
         final int endIndex = index + length;
+
+        int nonAsciiIndex = buf.forEachByte(index, length, FIND_NON_ASCII);
+        if (nonAsciiIndex == -1) {
+            return true;
+        }
+
+        index = nonAsciiIndex;
         while (index < endIndex) {
             byte b1 = buf.getByte(index++);
             byte b2, b3, b4;
