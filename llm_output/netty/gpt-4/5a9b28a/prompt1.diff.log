Iâ€™ve cached the J9 JVM check in a static final to avoid repeated detection overhead in thread termination checks.

```json
[
  {
    "filepath": "../netty/common/src/main/java/io/netty/util/Recycler.java",
    "search": "private volatile MessagePassingQueue<DefaultHandle<T>> pooledHandles;\n        private int ratioCounter;",
    "replace": "private volatile MessagePassingQueue<DefaultHandle<T>> pooledHandles;\n        private static final boolean IS_J9_VM = PlatformDependent.isJ9Jvm();\n        private int ratioCounter;"
  },
  {
    "filepath": "../netty/common/src/main/java/io/netty/util/Recycler.java",
    "search": "private static boolean isTerminated(Thread owner) {\n            // Do not use `Thread.getState()` in J9 JVM because it's known to have a performance issue.\n            // See: https://github.com/netty/netty/issues/13347#issuecomment-1518537895\n            return PlatformDependent.isJ9Jvm() ? !owner.isAlive() : owner.getState() == Thread.State.TERMINATED;\n        }",
    "replace": "private static boolean isTerminated(Thread owner) {\n            // Use cached J9 JVM flag to avoid repeated detection overhead.\n            return IS_J9_VM ? !owner.isAlive() : owner.getState() == Thread.State.TERMINATED;\n        }"
  }
]
```