I replaced the byte-array allocation and copy in shiftLeftFromSpecifiedPosition with an in-place loop over bit operations to eliminate temporary arrays and improve performance.

```json
[
  {
    "filepath": "../RoaringBitmap/RoaringBitmap/src/main/java/org/roaringbitmap/longlong/IntegerUtil.java",
    "search": "public static int shiftLeftFromSpecifiedPosition(int v, int pos, int count) {\n    byte[] initialVal = toBDBytes(v);\n    System.arraycopy(initialVal, pos + 1, initialVal, pos, count);\n    return fromBDBytes(initialVal);\n  }",
    "replace": "public static int shiftLeftFromSpecifiedPosition(int v, int pos, int count) {\n    for (int i = 0; i < count; i++) {\n      int fromPos = pos + i + 1;\n      int toPos = pos + i;\n      int byteValue = (v >>> ((3 - fromPos) * 8)) & 0xFF;\n      int shiftTo = (3 - toPos) * 8;\n      v = (v & ~(0xFF << shiftTo)) | (byteValue << shiftTo);\n    }\n    return v;\n  }"
  }
]
```