diff --git a/RoaringBitmap/src/main/java/org/roaringbitmap/buffer/MutableRoaringBitmap.java b/RoaringBitmap/src/main/java/org/roaringbitmap/buffer/MutableRoaringBitmap.java
index fb9e35b4..4efd6edc 100644
--- a/RoaringBitmap/src/main/java/org/roaringbitmap/buffer/MutableRoaringBitmap.java
+++ b/RoaringBitmap/src/main/java/org/roaringbitmap/buffer/MutableRoaringBitmap.java
@@ -799,14 +799,16 @@ public class MutableRoaringBitmap extends ImmutableRoaringBitmap
    */
   public void add(final long rangeStart, final long rangeEnd) {
     rangeSanityCheck(rangeStart, rangeEnd);
-    if (rangeStart >= rangeEnd) {
+    if (rangeStart > rangeEnd) {
       return; // empty range
     }
 
-    final int hbStart = (BufferUtil.highbits(rangeStart));
-    final int lbStart = (BufferUtil.lowbits(rangeStart));
-    final int hbLast = (BufferUtil.highbits(rangeEnd - 1));
-    final int lbLast = (BufferUtil.lowbits(rangeEnd - 1));
+    // treat rangeEnd as inclusive
+    final long inclusiveEnd = rangeEnd;
+    final int hbStart = BufferUtil.highbits(rangeStart);
+    final int lbStart = BufferUtil.lowbits(rangeStart);
+    final int hbLast = BufferUtil.highbits(inclusiveEnd);
+    final int lbLast = BufferUtil.lowbits(inclusiveEnd);
     for (int hb = hbStart; hb <= hbLast; ++hb) {
 
       // first container may contain partial range
