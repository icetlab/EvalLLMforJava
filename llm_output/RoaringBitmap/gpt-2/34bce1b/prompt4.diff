diff --git a/RoaringBitmap/src/main/java/org/roaringbitmap/longlong/IntegerUtil.java b/RoaringBitmap/src/main/java/org/roaringbitmap/longlong/IntegerUtil.java
index ed36adf0..d8aab2f2 100644
--- a/RoaringBitmap/src/main/java/org/roaringbitmap/longlong/IntegerUtil.java
+++ b/RoaringBitmap/src/main/java/org/roaringbitmap/longlong/IntegerUtil.java
@@ -50,9 +50,45 @@ public class IntegerUtil {
    * @return a fresh integer value
    */
   public static int shiftLeftFromSpecifiedPosition(int v, int pos, int count) {
-    byte[] initialVal = toBDBytes(v);
-    System.arraycopy(initialVal, pos + 1, initialVal, pos, count);
-    return fromBDBytes(initialVal);
+    if (count <= 0) {
+      return v;
+    }
+    int b0 = (v >>> 24) & 0xFF;
+    int b1 = (v >>> 16) & 0xFF;
+    int b2 = (v >>> 8) & 0xFF;
+    int b3 = v & 0xFF;
+    switch (pos) {
+      case 0:
+        if (count >= 3) {
+          b0 = b1;
+          b1 = b2;
+          b2 = b3;
+        } else if (count == 2) {
+          b0 = b1;
+          b1 = b2;
+        } else {
+          // count == 1
+          b0 = b1;
+        }
+        break;
+      case 1:
+        if (count >= 2) {
+          b1 = b2;
+          b2 = b3;
+        } else {
+          // count == 1
+          b1 = b2;
+        }
+        break;
+      case 2:
+        // count == 1
+        b2 = b3;
+        break;
+      case 3:
+      default:
+        return v;
+    }
+    return (b0 << 24) | (b1 << 16) | (b2 << 8) | b3;
   }
 
   /**
