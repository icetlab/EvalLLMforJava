diff --git a/core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala b/core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala
index 5f2be90535..d3b45279dd 100644
--- a/core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala
+++ b/core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala
@@ -64,7 +64,7 @@ object AclAuthorizer {
   }
 
   class AclSeqs(classes: Seq[AclEntry]*) {
-    def find(p: AclEntry => Boolean): Option[AclEntry] = classes.flatMap(_.find(p)).headOption
+    def find(p: AclEntry => Boolean): Option[AclEntry] = classes.view.flatMap(_.find(p)).headOption
     def isEmpty: Boolean = !classes.exists(_.nonEmpty)
   }
 
@@ -359,8 +359,9 @@ class AclAuthorizer extends Authorizer with Logging {
     val prefixed = aclCacheSnapshot
       .from(new ResourcePattern(resourceType, resourceName, PatternType.PREFIXED))
       .to(new ResourcePattern(resourceType, resourceName.take(1), PatternType.PREFIXED))
+      .iterator
       .flatMap { case (resource, acls) => if (resourceName.startsWith(resource.name)) acls.acls else Seq.empty }
-      .toBuffer
+      .to(LazyList)
 
     new AclSeqs(prefixed, wildcard, literal)
   }
