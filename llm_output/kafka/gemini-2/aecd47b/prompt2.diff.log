This change improves the performance of checksum calculation for direct `ByteBuffer` instances on Java 9 and later. The original implementation iterated byte-by-byte over direct buffers, which is inefficient.

The improvement introduces a mechanism to leverage the `Checksum.update(ByteBuffer)` method added in Java 9. This is achieved by:
1.  Creating a private static inner class, `Java9ChecksumFactory`, which uses `MethodHandles` to safely and efficiently detect and cache a handle to the `Checksum.update(ByteBuffer)` method. This check is performed only once at class-loading time.
2.  Modifying the `Checksums.update` method to use this optimized path for non-array-backed `ByteBuffer`s when running on Java 9 or newer. The buffer's state (position and limit) is carefully managed and restored to ensure the change is transparent to callers.
3.  For array-backed buffers or when running on older Java versions, the implementation falls back to the original, compatible behavior.

This approach avoids the slow byte-by-byte processing for direct buffers on modern JVMs while maintaining full backward compatibility with Java 8.

```json
[
  {
    "filepath": "../kafka/clients/src/main/java/org/apache/kafka/common/utils/Checksums.java",
    "search": "import java.nio.ByteBuffer;\nimport java.util.zip.Checksum;",
    "replace": "import java.lang.invoke.MethodHandle;\nimport java.lang.invoke.MethodHandles;\nimport java.lang.invoke.MethodType;\nimport java.nio.ByteBuffer;\nimport java.util.zip.Checksum;"
  },
  {
    "filepath": "../kafka/clients/src/main/java/org/apache/kafka/common/utils/Checksums.java",
    "search": "public final class Checksums {\n\n    private Checksums() {",
    "replace": "public final class Checksums {\n\n    private static final class Java9ChecksumFactory {\n        private static final MethodHandle UPDATE_BYTE_BUFFER_METHOD;\n\n        static {\n            MethodHandle handle = null;\n            try {\n                handle = MethodHandles.lookup().findVirtual(Checksum.class, \"update\",\n                        MethodType.methodType(void.class, ByteBuffer.class));\n            } catch (NoSuchMethodException | IllegalAccessException e) {\n                // Method does not exist, we can ignore this.\n            }\n            UPDATE_BYTE_BUFFER_METHOD = handle;\n        }\n\n        static boolean isAvailable() {\n            return UPDATE_BYTE_BUFFER_METHOD != null;\n        }\n\n        static void update(Checksum checksum, ByteBuffer buffer) {\n            try {\n                UPDATE_BYTE_BUFFER_METHOD.invoke(checksum, buffer);\n            } catch (Throwable t) {\n                throw new RuntimeException(\"Unable to invoke Checksum.update(ByteBuffer)\", t);\n            }\n        }\n    }\n\n    private Checksums() {"
  },
  {
    "filepath": "../kafka/clients/src/main/java/org/apache/kafka/common/utils/Checksums.java",
    "search": "    public static void update(Checksum checksum, ByteBuffer buffer, int offset, int length) {\n        if (buffer.hasArray()) {\n            checksum.update(buffer.array(), buffer.position() + buffer.arrayOffset() + offset, length);\n        } else {\n            int start = buffer.position() + offset;\n            for (int i = start; i < start + length; i++)\n                checksum.update(buffer.get(i));\n        }\n    }",
    "replace": "    public static void update(Checksum checksum, ByteBuffer buffer, int offset, int length) {\n        if (buffer.hasArray()) {\n            checksum.update(buffer.array(), buffer.position() + buffer.arrayOffset() + offset, length);\n        } else if (Java9ChecksumFactory.isAvailable()) {\n            int pos = buffer.position();\n            int limit = buffer.limit();\n            buffer.position(pos + offset);\n            buffer.limit(pos + offset + length);\n            Java9ChecksumFactory.update(checksum, buffer);\n            buffer.limit(limit);\n            buffer.position(pos);\n        } else {\n            int start = buffer.position() + offset;\n            for (int i = start; i < start + length; i++)\n                checksum.update(buffer.get(i));\n        }\n    }"
  }
]
```