diff --git a/clients/src/main/java/org/apache/kafka/common/utils/ByteUtils.java b/clients/src/main/java/org/apache/kafka/common/utils/ByteUtils.java
index 15868721da..79e4caff2c 100644
--- a/clients/src/main/java/org/apache/kafka/common/utils/ByteUtils.java
+++ b/clients/src/main/java/org/apache/kafka/common/utils/ByteUtils.java
@@ -392,12 +392,13 @@ public final class ByteUtils {
      * @param value The signed value
      */
     public static int sizeOfUnsignedVarint(int value) {
-        int bytes = 1;
-        while ((value & 0xffffff80) != 0L) {
-            bytes += 1;
-            value >>>= 7;
+        // Negative values always take 5 bytes in varint encoding
+        if (value < 0) {
+            return 5;
         }
-        return bytes;
+        // Determine highest set bit position and compute bytes = floor(highestBit/7) + 1
+        int highestBit = value == 0 ? 0 : 31 - Integer.numberOfLeadingZeros(value);
+        return (highestBit / 7) + 1;
     }
 
     /**
@@ -416,12 +417,9 @@ public final class ByteUtils {
      */
     public static int sizeOfVarlong(long value) {
         long v = (value << 1) ^ (value >> 63);
-        int bytes = 1;
-        while ((v & 0xffffffffffffff80L) != 0L) {
-            bytes += 1;
-            v >>>= 7;
-        }
-        return bytes;
+        // Determine highest set bit in zig-zag value and compute bytes = floor(highestBit/7) + 1
+        int highestBit = v == 0L ? 0 : 63 - Long.numberOfLeadingZeros(v);
+        return (highestBit / 7) + 1;
     }
 
     private static IllegalArgumentException illegalVarintException(int value) {
