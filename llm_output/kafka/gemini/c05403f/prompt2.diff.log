My previous change to optimize `sizeOfVarlong` failed a checkstyle NPath complexity check. I am now fixing this by converting the sequence of `if` statements into an `if-else if` cascade. This reduces the complexity to pass the check while maintaining the performance benefits of avoiding a loop. I have applied the same pattern to `sizeOfUnsignedVarint` for consistency and to prevent similar issues.

```json
[
  {
    "filepath": "../kafka/clients/src/main/java/org/apache/kafka/common/utils/ByteUtils.java",
    "search": "    public static int sizeOfUnsignedVarint(int value) {\n        int bytes = 1;\n        while ((value & 0xffffff80) != 0L) {\n            bytes += 1;\n            value >>>= 7;\n        }\n        return bytes;\n    }",
    "replace": "    public static int sizeOfUnsignedVarint(int value) {\n        if ((value & 0xffffff80) == 0) return 1;\n        else if ((value & 0xffffc000) == 0) return 2;\n        else if ((value & 0xffe00000) == 0) return 3;\n        else if ((value & 0xf0000000) == 0) return 4;\n        else return 5;\n    }"
  },
  {
    "filepath": "../kafka/clients/src/main/java/org/apache/kafka/common/utils/ByteUtils.java",
    "search": "    public static int sizeOfVarlong(long value) {\n        long v = (value << 1) ^ (value >> 63);\n        int bytes = 1;\n        while ((v & 0xffffffffffffff80L) != 0L) {\n            bytes += 1;\n            v >>>= 7;\n        }\n        return bytes;\n    }",
    "replace": "    public static int sizeOfVarlong(long value) {\n        long v = (value << 1) ^ (value >> 63);\n        if ((v & 0xffffffffffffff80L) == 0L) return 1;\n        else if ((v & 0xffffffffffffc000L) == 0L) return 2;\n        else if ((v & 0xffffffffffe00000L) == 0L) return 3;\n        else if ((v & 0xfffffffff0000000L) == 0L) return 4;\n        else if ((v & 0xfffffff800000000L) == 0L) return 5;\n        else if ((v & 0xfffffc0000000000L) == 0L) return 6;\n        else if ((v & 0xfffe000000000000L) == 0L) return 7;\n        else if ((v & 0xff00000000000000L) == 0L) return 8;\n        else if ((v & 0x8000000000000000L) == 0L) return 9;\n        else return 10;\n    }"
  }
]
```