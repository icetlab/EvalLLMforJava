Iâ€™ve optimized the include/exclude lookups by converting the lists to HashSets, reducing contains checks from O(N) to O(1).

```json
[
  {
    "filepath": "../kafka/connect/transforms/src/main/java/org/apache/kafka/connect/transforms/ReplaceField.java",
    "search": "import java.util.List;\nimport java.util.Map;",
    "replace": "import java.util.List;\nimport java.util.Set;\nimport java.util.HashSet;\nimport java.util.Map;"
  },
  {
    "filepath": "../kafka/connect/transforms/src/main/java/org/apache/kafka/connect/transforms/ReplaceField.java",
    "search": "private List<String> exclude;\n    private List<String> include;",
    "replace": "private Set<String> exclude;\n    private Set<String> include;"
  },
  {
    "filepath": "../kafka/connect/transforms/src/main/java/org/apache/kafka/connect/transforms/ReplaceField.java",
    "search": "exclude = config.getList(ConfigName.EXCLUDE);\n        include = config.getList(ConfigName.INCLUDE);",
    "replace": "exclude = new HashSet<>(config.getList(ConfigName.EXCLUDE));\n        include = new HashSet<>(config.getList(ConfigName.INCLUDE));"
  }
]
```