diff --git a/clients/src/main/java/org/apache/kafka/common/utils/ByteUtils.java b/clients/src/main/java/org/apache/kafka/common/utils/ByteUtils.java
index 15868721da..f677928cb2 100644
--- a/clients/src/main/java/org/apache/kafka/common/utils/ByteUtils.java
+++ b/clients/src/main/java/org/apache/kafka/common/utils/ByteUtils.java
@@ -75,7 +75,7 @@ public final class ByteUtils {
      * @return The integer read (MUST BE TREATED WITH SPECIAL CARE TO AVOID SIGNEDNESS)
      */
     public static int readUnsignedIntLE(byte[] buffer, int offset) {
-        return (buffer[offset] << 0 & 0xff)
+        return (buffer[offset] & 0xff)
                 | ((buffer[offset + 1] & 0xff) << 8)
                 | ((buffer[offset + 2] & 0xff) << 16)
                 | ((buffer[offset + 3] & 0xff) << 24);
@@ -392,12 +392,17 @@ public final class ByteUtils {
      * @param value The signed value
      */
     public static int sizeOfUnsignedVarint(int value) {
-        int bytes = 1;
-        while ((value & 0xffffff80) != 0L) {
-            bytes += 1;
-            value >>>= 7;
+        if ((value & ~0x7F) == 0) {
+            return 1;
+        } else if ((value & ~0x3FFF) == 0) {
+            return 2;
+        } else if ((value & ~0x1FFFFF) == 0) {
+            return 3;
+        } else if ((value & ~0xFFFFFFF) == 0) {
+            return 4;
+        } else {
+            return 5;
         }
-        return bytes;
     }
 
     /**
@@ -416,10 +421,23 @@ public final class ByteUtils {
      */
     public static int sizeOfVarlong(long value) {
         long v = (value << 1) ^ (value >> 63);
-        int bytes = 1;
-        while ((v & 0xffffffffffffff80L) != 0L) {
+        if ((v & ~0x7FL) == 0L) {
+            return 1;
+        }
+        if (v < 0L) {
+            return 10;
+        }
+        int bytes = 2;
+        if ((v & (~0L << 35)) != 0L) {
+            bytes += 4;
+            v >>>= 28;
+        }
+        if ((v & (~0L << 21)) != 0L) {
+            bytes += 2;
+            v >>>= 14;
+        }
+        if ((v & (~0L << 14)) != 0L) {
             bytes += 1;
-            v >>>= 7;
         }
         return bytes;
     }
