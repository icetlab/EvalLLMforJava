diff --git a/clients/src/main/java/org/apache/kafka/common/utils/Checksums.java b/clients/src/main/java/org/apache/kafka/common/utils/Checksums.java
index 679b59249d..4ac0101bbe 100644
--- a/clients/src/main/java/org/apache/kafka/common/utils/Checksums.java
+++ b/clients/src/main/java/org/apache/kafka/common/utils/Checksums.java
@@ -33,6 +33,9 @@ public final class Checksums {
     private Checksums() {
     }
 
+    // Thread-local scratch buffer for bulk reading from direct or readonly buffers
+    private static final ThreadLocal<byte[]> UPDATE_BUFFER = ThreadLocal.withInitial(() -> new byte[1024]);
+
     public static void update(Checksum checksum, ByteBuffer buffer, int length) {
         update(checksum, buffer, 0, length);
     }
@@ -42,8 +45,19 @@ public final class Checksums {
             checksum.update(buffer.array(), buffer.position() + buffer.arrayOffset() + offset, length);
         } else {
             int start = buffer.position() + offset;
-            for (int i = start; i < start + length; i++)
-                checksum.update(buffer.get(i));
+            int remaining = length;
+            // Duplicate buffer to avoid changing original position
+            ByteBuffer dup = buffer.duplicate();
+            dup.position(start);
+            dup.limit(start + length);
+            // Bulk-read into thread-local scratch to minimize allocations
+            byte[] tmp = UPDATE_BUFFER.get();
+            if (tmp.length < remaining) {
+                tmp = new byte[remaining];
+                UPDATE_BUFFER.set(tmp);
+            }
+            dup.get(tmp, 0, remaining);
+            checksum.update(tmp, 0, remaining);
         }
     }
     
