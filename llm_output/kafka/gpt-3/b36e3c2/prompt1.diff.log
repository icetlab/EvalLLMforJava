Iâ€™m adding a local `stats` reference to `brokerTopicStats.allTopicsStats` in the hot methods to avoid repeated field lookups, and updating metric calls to use this cached reference.

```json
[
  {
    "filepath": "../kafka/core/src/main/scala/kafka/log/LogValidator.scala",
    "search": "    // batch magic byte should have the same magic as the first batch",
    "replace": "    val stats = brokerTopicStats.allTopicsStats\n    // batch magic byte should have the same magic as the first batch"
  },
  {
    "filepath": "../kafka/core/src/main/scala/kafka/log/LogValidator.scala",
    "search": "    if (!record.hasMagic(batch.magic)) {",
    "replace": "    val stats = brokerTopicStats.allTopicsStats\n    if (!record.hasMagic(batch.magic)) {"
  },
  {
    "filepath": "../kafka/core/src/main/scala/kafka/log/LogValidator.scala",
    "search": "brokerTopicStats.allTopicsStats.invalidMagicNumberRecordsPerSec.mark()",
    "replace": "stats.invalidMagicNumberRecordsPerSec.mark()"
  },
  {
    "filepath": "../kafka/core/src/main/scala/kafka/log/LogValidator.scala",
    "search": "brokerTopicStats.allTopicsStats.invalidOffsetOrSequenceRecordsPerSec.mark()",
    "replace": "stats.invalidOffsetOrSequenceRecordsPerSec.mark()"
  },
  {
    "filepath": "../kafka/core/src/main/scala/kafka/log/LogValidator.scala",
    "search": "brokerTopicStats.allTopicsStats.invalidMessageCrcRecordsPerSec.mark()",
    "replace": "stats.invalidMessageCrcRecordsPerSec.mark()"
  }
]
```