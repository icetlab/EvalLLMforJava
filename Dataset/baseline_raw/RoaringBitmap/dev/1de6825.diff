commit 1de68254774c3d1932ee025cb331f60dd4e904d0
Author: xtonik <antonin.janec@gmail.com>
Date:   Mon Jul 24 16:27:21 2023 +0200

    Avoid intermediate byte array creation (#635)
    
    * avoid use of intermediate byte array creation as it is slower than direct access to its source integer
    
    * benchmark for very similar code as a evidence of performance improvement

diff --git a/RoaringBitmap/src/main/java/org/roaringbitmap/art/Node16.java b/RoaringBitmap/src/main/java/org/roaringbitmap/art/Node16.java
index de6dddea..bdf9f907 100644
--- a/RoaringBitmap/src/main/java/org/roaringbitmap/art/Node16.java
+++ b/RoaringBitmap/src/main/java/org/roaringbitmap/art/Node16.java
@@ -168,10 +168,8 @@ public class Node16 extends Node {
       return currentNode16;
     } else {
       Node48 node48 = new Node48(currentNode16.prefixLength);
-      byte[] firtBytes = LongUtils.toBDBytes(currentNode16.firstV);
       for (int i = 0; i < 8; i++) {
-        byte v = firtBytes[i];
-        int unsignedIdx = Byte.toUnsignedInt(v);
+        int unsignedIdx = Byte.toUnsignedInt((byte) (currentNode16.firstV >>> ((7 - i) << 3)));
         //i won't be beyond 48
         Node48.setOneByte(unsignedIdx, (byte) i, node48.childIndex);
         node48.children[i] = currentNode16.children[i];
