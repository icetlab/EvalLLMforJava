The changes replace the iterative byte‐count loops in sizeOfUnsignedVarint and sizeOfVarlong with O(1) computations using leading‐zero bit counts.

```json
[
  {
    "filepath": "../kafka/clients/src/main/java/org/apache/kafka/common/utils/ByteUtils.java",
    "search": "public static int sizeOfUnsignedVarint(int value) {\n    int bytes = 1;\n    while ((value & 0xffffff80) != 0L) {\n        bytes += 1;\n        value >>>= 7;\n    }\n    return bytes;\n}",
    "replace": "public static int sizeOfUnsignedVarint(int value) {\n    // fast path for single-byte values\n    if ((value & ~0x7F) == 0) {\n        return 1;\n    }\n    // compute number of bytes based on bit length (7 bits per byte)\n    int bitLength = 32 - Integer.numberOfLeadingZeros(value);\n    return (bitLength + 6) / 7;\n}"
  },
  {
    "filepath": "../kafka/clients/src/main/java/org/apache/kafka/common/utils/ByteUtils.java",
    "search": "public static int sizeOfVarlong(long value) {\n    long v = (value << 1) ^ (value >> 63);\n    int bytes = 1;\n    while ((v & 0xffffffffffffff80L) != 0L) {\n        bytes += 1;\n        v >>>= 7;\n    }\n    return bytes;\n}",
    "replace": "public static int sizeOfVarlong(long value) {\n    long v = (value << 1) ^ (value >> 63);\n    // fast path for single-byte values\n    if ((v & ~0x7FL) == 0L) {\n        return 1;\n    }\n    // compute number of bytes based on bit length (7 bits per byte)\n    int bitLength = 64 - Long.numberOfLeadingZeros(v);\n    return (bitLength + 6) / 7;\n}"
  }
]
```