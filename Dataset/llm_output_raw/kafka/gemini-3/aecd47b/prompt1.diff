diff --git a/clients/src/main/java/org/apache/kafka/common/utils/Checksums.java b/clients/src/main/java/org/apache/kafka/common/utils/Checksums.java
index 679b59249d..d94ba4959a 100644
--- a/clients/src/main/java/org/apache/kafka/common/utils/Checksums.java
+++ b/clients/src/main/java/org/apache/kafka/common/utils/Checksums.java
@@ -30,6 +30,9 @@ import java.util.zip.Checksum;
  */
 public final class Checksums {
 
+    private static final int TL_BUFFER_SIZE = 4096;
+    private static final ThreadLocal<ByteBuffer> TL_BUFFER = ThreadLocal.withInitial(() -> ByteBuffer.allocate(TL_BUFFER_SIZE));
+
     private Checksums() {
     }
 
@@ -41,27 +44,28 @@ public final class Checksums {
         if (buffer.hasArray()) {
             checksum.update(buffer.array(), buffer.position() + buffer.arrayOffset() + offset, length);
         } else {
-            int start = buffer.position() + offset;
-            for (int i = start; i < start + length; i++)
-                checksum.update(buffer.get(i));
+            ByteBuffer toUpdate = buffer.duplicate();
+            toUpdate.position(buffer.position() + offset);
+            toUpdate.limit(buffer.position() + offset + length);
+
+            byte[] b = TL_BUFFER.get().array();
+            while (toUpdate.hasRemaining()) {
+                int read = Math.min(toUpdate.remaining(), b.length);
+                toUpdate.get(b, 0, read);
+                checksum.update(b, 0, read);
+            }
         }
     }
     
     public static void updateInt(Checksum checksum, int input) {
-        checksum.update((byte) (input >> 24));
-        checksum.update((byte) (input >> 16));
-        checksum.update((byte) (input >> 8));
-        checksum.update((byte) input /* >> 0 */);
+        ByteBuffer buffer = TL_BUFFER.get();
+        buffer.putInt(0, input);
+        checksum.update(buffer.array(), 0, 4);
     }
 
     public static void updateLong(Checksum checksum, long input) {
-        checksum.update((byte) (input >> 56));
-        checksum.update((byte) (input >> 48));
-        checksum.update((byte) (input >> 40));
-        checksum.update((byte) (input >> 32));
-        checksum.update((byte) (input >> 24));
-        checksum.update((byte) (input >> 16));
-        checksum.update((byte) (input >> 8));
-        checksum.update((byte) input /* >> 0 */);
+        ByteBuffer buffer = TL_BUFFER.get();
+        buffer.putLong(0, input);
+        checksum.update(buffer.array(), 0, 8);
     }
 }
