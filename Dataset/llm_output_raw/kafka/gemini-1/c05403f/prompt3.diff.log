The provided code contains `sizeOfUnsignedVarint` and `sizeOfVarlong` methods that use loops to determine the number of bytes required for variable-length encoding. These loops can be replaced with a more performant, branchless approach using built-in functions `Integer.numberOfLeadingZeros` and `Long.numberOfLeadingZeros`. These functions are often implemented as a single CPU instruction (intrinsics), which is significantly faster than a loop.

The new implementations calculate the number of bytes based on the position of the most significant bit, which directly corresponds to the length of the varint/varlong encoding. This change preserves the logic of the original methods, as verified by the provided unit tests, while improving performance as targeted by the benchmarks.

```json
[
  {
    "filepath": "../kafka/clients/src/main/java/org/apache/kafka/common/utils/ByteUtils.java",
    "search": "    /**\n     * Number of bytes needed to encode an integer in unsigned variable-length format.\n     *\n     * @param value The signed value\n     */\n    public static int sizeOfUnsignedVarint(int value) {\n        int bytes = 1;\n        while ((value & 0xffffff80) != 0L) {\n            bytes += 1;\n            value >>>= 7;\n        }\n        return bytes;\n    }",
    "replace": "    /**\n     * Number of bytes needed to encode an integer in unsigned variable-length format.\n     *\n     * @param value The signed value\n     */\n    public static int sizeOfUnsignedVarint(int value) {\n        return (31 - Integer.numberOfLeadingZeros(value)) / 7 + 1;\n    }"
  },
  {
    "filepath": "../kafka/clients/src/main/java/org/apache/kafka/common/utils/ByteUtils.java",
    "search": "    /**\n     * Number of bytes needed to encode a long in variable-length format.\n     *\n     * @param value The signed value\n     */\n    public static int sizeOfVarlong(long value) {\n        long v = (value << 1) ^ (value >> 63);\n        int bytes = 1;\n        while ((v & 0xffffffffffffff80L) != 0L) {\n            bytes += 1;\n            v >>>= 7;\n        }\n        return bytes;\n    }",
    "replace": "    /**\n     * Number of bytes needed to encode a long in variable-length format.\n     *\n     * @param value The signed value\n     */\n    public static int sizeOfVarlong(long value) {\n        long v = (value << 1) ^ (value >> 63);\n        return (63 - Long.numberOfLeadingZeros(v)) / 7 + 1;\n    }"
  }
]
```