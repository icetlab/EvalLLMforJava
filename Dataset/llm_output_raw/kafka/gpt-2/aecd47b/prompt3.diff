diff --git a/clients/src/main/java/org/apache/kafka/common/utils/Checksums.java b/clients/src/main/java/org/apache/kafka/common/utils/Checksums.java
index 679b59249d..907774b23e 100644
--- a/clients/src/main/java/org/apache/kafka/common/utils/Checksums.java
+++ b/clients/src/main/java/org/apache/kafka/common/utils/Checksums.java
@@ -33,6 +33,11 @@ public final class Checksums {
     private Checksums() {
     }
 
+    // Scratch buffer for bulk updates on non-array ByteBuffers
+    private static final int DEFAULT_CHUNK_SIZE = 4096;
+    private static final ThreadLocal<byte[]> BUFFER =
+        ThreadLocal.withInitial(() -> new byte[DEFAULT_CHUNK_SIZE]);
+
     public static void update(Checksum checksum, ByteBuffer buffer, int length) {
         update(checksum, buffer, 0, length);
     }
@@ -42,8 +47,15 @@ public final class Checksums {
             checksum.update(buffer.array(), buffer.position() + buffer.arrayOffset() + offset, length);
         } else {
             int start = buffer.position() + offset;
-            for (int i = start; i < start + length; i++)
-                checksum.update(buffer.get(i));
+            // Bulk copy via a duplicate so original position is untouched
+            ByteBuffer dup = buffer.duplicate();
+            dup.position(start).limit(start + length);
+            byte[] tmp = BUFFER.get();
+            while (dup.hasRemaining()) {
+                int chunk = Math.min(dup.remaining(), tmp.length);
+                dup.get(tmp, 0, chunk);
+                checksum.update(tmp, 0, chunk);
+            }
         }
     }
     
