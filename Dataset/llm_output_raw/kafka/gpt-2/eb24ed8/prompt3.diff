diff --git a/clients/src/main/java/org/apache/kafka/common/record/CompressionType.java b/clients/src/main/java/org/apache/kafka/common/record/CompressionType.java
index 352d12d834..5b3d9b2d8a 100644
--- a/clients/src/main/java/org/apache/kafka/common/record/CompressionType.java
+++ b/clients/src/main/java/org/apache/kafka/common/record/CompressionType.java
@@ -30,6 +30,8 @@ import java.lang.invoke.MethodType;
 import java.nio.ByteBuffer;
 import java.util.zip.GZIPInputStream;
 import java.util.zip.GZIPOutputStream;
+import java.util.Map;
+import java.util.HashMap;
 
 /**
  * The compression type to use
@@ -135,6 +137,14 @@ public enum CompressionType {
         }
     };
 
+    private static final Map<String, CompressionType> NAME_TO_TYPE = new HashMap<>();
+
+    static {
+        for (CompressionType type : values()) {
+            NAME_TO_TYPE.put(type.name, type);
+        }
+    }
+
     public final int id;
     public final String name;
     public final float rate;
@@ -184,17 +194,9 @@ public enum CompressionType {
     }
 
     public static CompressionType forName(String name) {
-        if (NONE.name.equals(name))
-            return NONE;
-        else if (GZIP.name.equals(name))
-            return GZIP;
-        else if (SNAPPY.name.equals(name))
-            return SNAPPY;
-        else if (LZ4.name.equals(name))
-            return LZ4;
-        else if (ZSTD.name.equals(name))
-            return ZSTD;
-        else
+        CompressionType type = NAME_TO_TYPE.get(name);
+        if (type != null)
+            return type;
         throw new IllegalArgumentException("Unknown compression name: " + name);
     }
 
