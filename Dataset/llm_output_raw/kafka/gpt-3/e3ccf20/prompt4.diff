diff --git a/core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala b/core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala
index 86f06981ff..ecdb0468b5 100644
--- a/core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala
+++ b/core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala
@@ -349,15 +349,19 @@ class AclAuthorizer extends Authorizer with Logging {
         .map(_.acls)
         .getOrElse(Set.empty)
 
-      val prefixed = aclCache
-        .from(new ResourcePattern(resourceType, resourceName, PatternType.PREFIXED))
-        .to(new ResourcePattern(resourceType, resourceName.take(1), PatternType.PREFIXED))
-        .filterKeys(resource => resourceName.startsWith(resource.name))
-        .values
-        .flatMap { _.acls }
-        .toSet
-
-      prefixed ++ wildcard ++ literal
+      val builder = Set.newBuilder[AclEntry]
+      val from = new ResourcePattern(resourceType, resourceName, PatternType.PREFIXED)
+      val to = new ResourcePattern(resourceType, resourceName.take(1), PatternType.PREFIXED)
+      val rangeIter = aclCache.from(from).to(to).iterator
+      while (rangeIter.hasNext) {
+        val (pattern, versioned) = rangeIter.next()
+        if (resourceName.startsWith(pattern.name)) {
+          builder ++= versioned.acls
+        }
+      }
+      if (wildcard.nonEmpty) builder ++= wildcard
+      if (literal.nonEmpty) builder ++= literal
+      builder.result()
     }
   }
 
