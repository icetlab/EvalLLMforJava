diff --git a/clients/src/main/java/org/apache/kafka/common/utils/Checksums.java b/clients/src/main/java/org/apache/kafka/common/utils/Checksums.java
index 679b59249d..51c6af3aa5 100644
--- a/clients/src/main/java/org/apache/kafka/common/utils/Checksums.java
+++ b/clients/src/main/java/org/apache/kafka/common/utils/Checksums.java
@@ -30,6 +30,9 @@ import java.util.zip.Checksum;
  */
 public final class Checksums {
 
+    private static final ThreadLocal<byte[]> BUFFERS = ThreadLocal.withInitial(() -> new byte[8192]);
+    private static final ThreadLocal<byte[]> TLD_BYTES = ThreadLocal.withInitial(() -> new byte[8]);
+
     private Checksums() {
     }
 
@@ -41,27 +44,38 @@ public final class Checksums {
         if (buffer.hasArray()) {
             checksum.update(buffer.array(), buffer.position() + buffer.arrayOffset() + offset, length);
         } else {
-            int start = buffer.position() + offset;
-            for (int i = start; i < start + length; i++)
-                checksum.update(buffer.get(i));
+            ByteBuffer toRead = buffer.duplicate();
+            toRead.position(buffer.position() + offset);
+            toRead.limit(buffer.position() + offset + length);
+
+            byte[] temp = BUFFERS.get();
+            while (toRead.hasRemaining()) {
+                int n = Math.min(toRead.remaining(), temp.length);
+                toRead.get(temp, 0, n);
+                checksum.update(temp, 0, n);
+            }
         }
     }
     
     public static void updateInt(Checksum checksum, int input) {
-        checksum.update((byte) (input >> 24));
-        checksum.update((byte) (input >> 16));
-        checksum.update((byte) (input >> 8));
-        checksum.update((byte) input /* >> 0 */);
+        byte[] bytes = TLD_BYTES.get();
+        bytes[0] = (byte) (input >> 24);
+        bytes[1] = (byte) (input >> 16);
+        bytes[2] = (byte) (input >> 8);
+        bytes[3] = (byte) input;
+        checksum.update(bytes, 0, 4);
     }
 
     public static void updateLong(Checksum checksum, long input) {
-        checksum.update((byte) (input >> 56));
-        checksum.update((byte) (input >> 48));
-        checksum.update((byte) (input >> 40));
-        checksum.update((byte) (input >> 32));
-        checksum.update((byte) (input >> 24));
-        checksum.update((byte) (input >> 16));
-        checksum.update((byte) (input >> 8));
-        checksum.update((byte) input /* >> 0 */);
+        byte[] bytes = TLD_BYTES.get();
+        bytes[0] = (byte) (input >> 56);
+        bytes[1] = (byte) (input >> 48);
+        bytes[2] = (byte) (input >> 40);
+        bytes[3] = (byte) (input >> 32);
+        bytes[4] = (byte) (input >> 24);
+        bytes[5] = (byte) (input >> 16);
+        bytes[6] = (byte) (input >> 8);
+        bytes[7] = (byte) input;
+        checksum.update(bytes, 0, 8);
     }
 }
