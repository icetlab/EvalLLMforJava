I’ve replaced the `StringUtil.decodeHexNibble(c)` call with an inlined, branch‐free ternary expression to eliminate the method call overhead in the tight parsing loop.

```json
[
  {
    "filepath": "../netty/common/src/main/java/io/netty/util/NetUtil.java",
    "search": "value += StringUtil.decodeHexNibble(c) << ((i - begin) << 2);",
    "replace": "value += ((c >= '0' && c <= '9') ? c - '0' : (c >= 'a' && c <= 'f') ? c - 'a' + 10 : c - 'A' + 10) << ((i - begin) << 2);"
  }
]
```