The change replaces the previous StringBuilder-based URI adjustment with a single UTF-8 byte array conversion and conditional direct writes into the ByteBuf, eliminating extra String/Builder and byte[] allocations while preserving slash‚Äêinsertion logic.

```json
[
  {
    "filepath": "../netty/codec-http/src/main/java/io/netty/handler/codec/http/HttpRequestEncoder.java",
    "search": "String uri = request.uri();\n\n        if (uri.isEmpty()) {\n            uri += SLASH;\n        } else {\n            int start = uri.indexOf(\"://\");\n            if (start != -1 && uri.charAt(0) != SLASH) {\n                int startIndex = start + 3;\n                // Correctly handle query params.\n                // See https://github.com/netty/netty/issues/2732\n                int index = uri.indexOf(QUESTION_MARK, startIndex);\n                if (index == -1) {\n                    if (uri.lastIndexOf(SLASH) <= startIndex) {\n                        uri += SLASH;\n                    }\n                } else {\n                    if (uri.lastIndexOf(SLASH, index) <= startIndex) {\n                        int len = uri.length();\n                        StringBuilder sb = new StringBuilder(len + 1);\n                        sb.append(uri, 0, index)\n                          .append(SLASH)\n                          .append(uri, index, len);\n                        uri = sb.toString();\n                    }\n                }\n            }\n        }\n\n        buf.writeCharSequence(uri, CharsetUtil.UTF_8);",
    "replace": "String uri = request.uri();\n        int slashInsertPos = -1;\n        if (uri.isEmpty()) {\n            // empty URIs become \"/\"\n            buf.writeByte(SLASH);\n        } else {\n            int start = uri.indexOf(\"://\");\n            if (start != -1 && uri.charAt(0) != SLASH) {\n                int startIndex = start + 3;\n                int qmIndex = uri.indexOf(QUESTION_MARK, startIndex);\n                if (qmIndex == -1) {\n                    if (uri.lastIndexOf(SLASH) <= startIndex) {\n                        slashInsertPos = uri.length();\n                    }\n                } else {\n                    if (uri.lastIndexOf(SLASH, qmIndex) <= startIndex) {\n                        slashInsertPos = qmIndex;\n                    }\n                }\n            }\n            byte[] uriBytes = uri.getBytes(CharsetUtil.UTF_8);\n            if (slashInsertPos >= 0) {\n                buf.writeBytes(uriBytes, 0, slashInsertPos);\n                buf.writeByte(SLASH);\n                buf.writeBytes(uriBytes, slashInsertPos, uriBytes.length - slashInsertPos);\n            } else {\n                buf.writeBytes(uriBytes);\n            }\n        }"
  }
]
```