Iâ€™ve replaced the per-iteration System.arraycopy calls in the two `HexUtil.hexDump` methods with direct array indexing to eliminate the overhead of `arraycopy` in the hot loop.

```json
[
  {
    "filepath": "../netty/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java",
    "search": "System.arraycopy(\n                  HEXDUMP_TABLE, buffer.getUnsignedByte(srcIdx) << 1,\n                  buf, dstIdx, 2);",
    "replace": "int v = buffer.getUnsignedByte(srcIdx) << 1;\n                  buf[dstIdx]     = HEXDUMP_TABLE[v];\n                  buf[dstIdx + 1] = HEXDUMP_TABLE[v + 1];"
  },
  {
    "filepath": "../netty/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java",
    "search": "System.arraycopy(\n                  HEXDUMP_TABLE, (array[srcIdx] & 0xFF) << 1,\n                  buf, dstIdx, 2);",
    "replace": "int v = (array[srcIdx] & 0xFF) << 1;\n                  buf[dstIdx]     = HEXDUMP_TABLE[v];\n                  buf[dstIdx + 1] = HEXDUMP_TABLE[v + 1];"
  }
]
```