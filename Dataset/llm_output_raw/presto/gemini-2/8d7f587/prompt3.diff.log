The provided code can be optimized by leveraging `deserializeEnvelope` to more efficiently access a geometry's bounding box information. This avoids the overhead of full geometry deserialization or recalculating the envelope from all vertices, which is particularly beneficial for complex geometries.

For `ST_XMin`, `ST_XMax`, `ST_YMin`, and `ST_YMax` functions, the full geometry deserialization can be completely avoided. We can use `deserializeEnvelope` and retrieve the corresponding value from the resulting `Envelope` object. For empty geometries, `deserializeEnvelope` returns `null`, and in these cases, we correctly return `NaN`, matching the original behavior.

For the `ST_Envelope` function, which is the subject of the benchmark, the optimization is slightly different. While `deserializeEnvelope` can quickly retrieve the envelope, creating the resulting geometry requires the spatial reference, which can only be obtained by deserializing the full `OGCGeometry` object. The performance gain comes from replacing the potentially expensive `getEnvelope` call (which iterates over all vertices of a complex geometry) with the much cheaper `deserializeEnvelope` call (which likely reads a pre-computed envelope from the serialized data).

```json
[
  {
    "filepath": "../presto/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java",
    "search": "    @Description(\"Returns X maxima of a bounding box of a Geometry\")\n    @ScalarFunction(\"ST_XMax\")\n    @SqlType(DOUBLE)\n    public static double stXMax(@SqlType(GEOMETRY_TYPE_NAME) Slice input)\n    {\n        OGCGeometry geometry = deserialize(input);\n        Envelope envelope = getEnvelope(geometry);\n        return envelope.getXMax();\n    }",
    "replace": "    @Description(\"Returns X maxima of a bounding box of a Geometry\")\n    @ScalarFunction(\"ST_XMax\")\n    @SqlType(DOUBLE)\n    public static double stXMax(@SqlType(GEOMETRY_TYPE_NAME) Slice input)\n    {\n        Envelope envelope = deserializeEnvelope(input);\n        if (envelope == null) {\n            return Double.NaN;\n        }\n        return envelope.getXMax();\n    }"
  },
  {
    "filepath": "../presto/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java",
    "search": "    @Description(\"Returns Y maxima of a bounding box of a Geometry\")\n    @ScalarFunction(\"ST_YMax\")\n    @SqlType(DOUBLE)\n    public static double stYMax(@SqlType(GEOMETRY_TYPE_NAME) Slice input)\n    {\n        OGCGeometry geometry = deserialize(input);\n        Envelope envelope = getEnvelope(geometry);\n        return envelope.getYMax();\n    }",
    "replace": "    @Description(\"Returns Y maxima of a bounding box of a Geometry\")\n    @ScalarFunction(\"ST_YMax\")\n    @SqlType(DOUBLE)\n    public static double stYMax(@SqlType(GEOMETRY_TYPE_NAME) Slice input)\n    {\n        Envelope envelope = deserializeEnvelope(input);\n        if (envelope == null) {\n            return Double.NaN;\n        }\n        return envelope.getYMax();\n    }"
  },
  {
    "filepath": "../presto/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java",
    "search": "    @Description(\"Returns X minima of a bounding box of a Geometry\")\n    @ScalarFunction(\"ST_XMin\")\n    @SqlType(DOUBLE)\n    public static double stXMin(@SqlType(GEOMETRY_TYPE_NAME) Slice input)\n    {\n        OGCGeometry geometry = deserialize(input);\n        Envelope envelope = getEnvelope(geometry);\n        return envelope.getXMin();\n    }",
    "replace": "    @Description(\"Returns X minima of a bounding box of a Geometry\")\n    @ScalarFunction(\"ST_XMin\")\n    @SqlType(DOUBLE)\n    public static double stXMin(@SqlType(GEOMETRY_TYPE_NAME) Slice input)\n    {\n        Envelope envelope = deserializeEnvelope(input);\n        if (envelope == null) {\n            return Double.NaN;\n        }\n        return envelope.getXMin();\n    }"
  },
  {
    "filepath": "../presto/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java",
    "search": "    @Description(\"Returns Y minima of a bounding box of a Geometry\")\n    @ScalarFunction(\"ST_YMin\")\n    @SqlType(DOUBLE)\n    public static double stYMin(@SqlType(GEOMETRY_TYPE_NAME) Slice input)\n    {\n        OGCGeometry geometry = deserialize(input);\n        Envelope envelope = getEnvelope(geometry);\n        return envelope.getYMin();\n    }",
    "replace": "    @Description(\"Returns Y minima of a bounding box of a Geometry\")\n    @ScalarFunction(\"ST_YMin\")\n    @SqlType(DOUBLE)\n    public static double stYMin(@SqlType(GEOMETRY_TYPE_NAME) Slice input)\n    {\n        Envelope envelope = deserializeEnvelope(input);\n        if (envelope == null) {\n            return Double.NaN;\n        }\n        return envelope.getYMin();\n    }"
  },
  {
    "filepath": "../presto/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java",
    "search": "    @Description(\"Returns the bounding rectangular polygon of a Geometry\")\n    @ScalarFunction(\"ST_Envelope\")\n    @SqlType(GEOMETRY_TYPE_NAME)\n    public static Slice stEnvelope(@SqlType(GEOMETRY_TYPE_NAME) Slice input)\n    {\n        OGCGeometry geometry = deserialize(input);\n        SpatialReference reference = geometry.getEsriSpatialReference();\n        Envelope envelope = getEnvelope(geometry);\n        return serialize(createFromEsriGeometry(envelope, reference));\n    }",
    "replace": "    @Description(\"Returns the bounding rectangular polygon of a Geometry\")\n    @ScalarFunction(\"ST_Envelope\")\n    @SqlType(GEOMETRY_TYPE_NAME)\n    public static Slice stEnvelope(@SqlType(GEOMETRY_TYPE_NAME) Slice input)\n    {\n        Envelope envelope = deserializeEnvelope(input);\n        // A full deserialization is required to obtain the spatial reference\n        OGCGeometry geometry = deserialize(input);\n        if (envelope == null) {\n            envelope = new Envelope();\n        }\n        return serialize(createFromEsriGeometry(envelope, geometry.getEsriSpatialReference()));\n    }"
  }
]
```