The performance issue is that `ST_XMin`, `ST_XMax`, `ST_YMin`, and `ST_YMax` functions are slow due to the high cost of deserializing the full geometry object from a `Slice`. However, these functions only require the geometry's envelope, not the full geometry data.

To improve performance, I will modify these functions to use `deserializeEnvelope` instead of `deserialize`. The `deserializeEnvelope` function is more efficient as it only extracts the envelope from the serialized geometry, avoiding the overhead of full deserialization.

This change also requires updating the function signatures to return a nullable `Double` instead of a primitive `double`, and adding the `@SqlNullable` annotation. This is because `deserializeEnvelope` returns `null` for empty geometries, and returning `null` is the correct behavior for these functions when the input geometry is empty, as confirmed by the unit tests.

```json
[
  {
    "filepath": "../presto/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java",
    "search": "@Description(\"Returns X maxima of a bounding box of a Geometry\")\n    @ScalarFunction(\"ST_XMax\")\n    @SqlType(DOUBLE)\n    public static double stXMax(@SqlType(GEOMETRY_TYPE_NAME) Slice input)\n    {\n        OGCGeometry geometry = deserialize(input);\n        Envelope envelope = getEnvelope(geometry);\n        return envelope.getXMax();\n    }",
    "replace": "@SqlNullable\n    @Description(\"Returns X maxima of a bounding box of a Geometry\")\n    @ScalarFunction(\"ST_XMax\")\n    @SqlType(DOUBLE)\n    public static Double stXMax(@SqlType(GEOMETRY_TYPE_NAME) Slice input)\n    {\n        Envelope envelope = deserializeEnvelope(input);\n        if (envelope == null) {\n            return null;\n        }\n        return envelope.getXMax();\n    }"
  },
  {
    "filepath": "../presto/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java",
    "search": "@Description(\"Returns Y maxima of a bounding box of a Geometry\")\n    @ScalarFunction(\"ST_YMax\")\n    @SqlType(DOUBLE)\n    public static double stYMax(@SqlType(GEOMETRY_TYPE_NAME) Slice input)\n    {\n        OGCGeometry geometry = deserialize(input);\n        Envelope envelope = getEnvelope(geometry);\n        return envelope.getYMax();\n    }",
    "replace": "@SqlNullable\n    @Description(\"Returns Y maxima of a bounding box of a Geometry\")\n    @ScalarFunction(\"ST_YMax\")\n    @SqlType(DOUBLE)\n    public static Double stYMax(@SqlType(GEOMETRY_TYPE_NAME) Slice input)\n    {\n        Envelope envelope = deserializeEnvelope(input);\n        if (envelope == null) {\n            return null;\n        }\n        return envelope.getYMax();\n    }"
  },
  {
    "filepath": "../presto/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java",
    "search": "@Description(\"Returns X minima of a bounding box of a Geometry\")\n    @ScalarFunction(\"ST_XMin\")\n    @SqlType(DOUBLE)\n    public static double stXMin(@SqlType(GEOMETRY_TYPE_NAME) Slice input)\n    {\n        OGCGeometry geometry = deserialize(input);\n        Envelope envelope = getEnvelope(geometry);\n        return envelope.getXMin();\n    }",
    "replace": "@SqlNullable\n    @Description(\"Returns X minima of a bounding box of a Geometry\")\n    @ScalarFunction(\"ST_XMin\")\n    @SqlType(DOUBLE)\n    public static Double stXMin(@SqlType(GEOMETRY_TYPE_NAME) Slice input)\n    {\n        Envelope envelope = deserializeEnvelope(input);\n        if (envelope == null) {\n            return null;\n        }\n        return envelope.getXMin();\n    }"
  },
  {
    "filepath": "../presto/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java",
    "search": "@Description(\"Returns Y minima of a bounding box of a Geometry\")\n    @ScalarFunction(\"ST_YMin\")\n    @SqlType(DOUBLE)\n    public static double stYMin(@SqlType(GEOMETRY_TYPE_NAME) Slice input)\n    {\n        OGCGeometry geometry = deserialize(input);\n        Envelope envelope = getEnvelope(geometry);\n        return envelope.getYMin();\n    }",
    "replace": "@SqlNullable\n    @Description(\"Returns Y minima of a bounding box of a Geometry\")\n    @ScalarFunction(\"ST_YMin\")\n    @SqlType(DOUBLE)\n    public static Double stYMin(@SqlType(GEOMETRY_TYPE_NAME) Slice input)\n    {\n        Envelope envelope = deserializeEnvelope(input);\n        if (envelope == null) {\n            return null;\n        }\n        return envelope.getYMin();\n    }"
  }
]
```