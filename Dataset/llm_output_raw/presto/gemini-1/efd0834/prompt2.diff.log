The overall performance improvement is to defer the memory accounting for the input page in `PageProcessor`. The problem description states that construction-time memory accounting is not necessary because the processor is immediately used to produce a page. The current implementation calculates the retained size of the input page in the constructor of the internal `ProjectSelectedPositions` class, which can be an expensive operation.

By removing this calculation from the constructor, the retained size calculation is delayed until the first page is actually being processed. Memory accounting is still performed correctly before any output page is produced, but this change avoids the upfront cost at construction time. This aligns with the provided performance issue description and improves performance by lazily computing the retained memory size.

```json
[
  {
    "filepath": "../presto/presto-main/src/main/java/com/facebook/presto/operator/project/PageProcessor.java",
    "search": "            this.selectedPositions = selectedPositions;\n            this.previouslyComputedResults = new Block[projections.size()];\n            updateRetainedSize();\n        }",
    "replace": "            this.selectedPositions = selectedPositions;\n            this.previouslyComputedResults = new Block[projections.size()];\n        }"
  }
]
```