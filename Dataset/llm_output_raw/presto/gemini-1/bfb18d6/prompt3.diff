diff --git a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java
index cff4f39085..aa62a7ff0f 100644
--- a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java
+++ b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java
@@ -1040,16 +1040,22 @@ public final class GeoFunctions
     @SqlType(GEOMETRY_TYPE_NAME)
     public static Slice stIntersection(@SqlType(GEOMETRY_TYPE_NAME) Slice left, @SqlType(GEOMETRY_TYPE_NAME) Slice right)
     {
-        if (deserializeType(left) == GeometrySerializationType.ENVELOPE && deserializeType(right) == GeometrySerializationType.ENVELOPE) {
         Envelope leftEnvelope = deserializeEnvelope(left);
+        if (leftEnvelope.isEmpty()) {
+            return EMPTY_POLYGON;
+        }
         Envelope rightEnvelope = deserializeEnvelope(right);
+        if (rightEnvelope.isEmpty()) {
+            return EMPTY_POLYGON;
+        }
 
-            // Envelope#intersect updates leftEnvelope to the intersection of the two envelopes
-            if (!leftEnvelope.intersect(rightEnvelope)) {
+        Envelope intersection = new Envelope();
+        leftEnvelope.queryEnvelope(intersection);
+        if (!intersection.intersect(rightEnvelope)) {
             return EMPTY_POLYGON;
         }
 
-            Envelope intersection = leftEnvelope;
+        if (deserializeType(left) == GeometrySerializationType.ENVELOPE && deserializeType(right) == GeometrySerializationType.ENVELOPE) {
             if (intersection.getXMin() == intersection.getXMax()) {
                 if (intersection.getYMin() == intersection.getYMax()) {
                     return EsriGeometrySerde.serialize(createFromEsriGeometry(new Point(intersection.getXMin(), intersection.getXMax()), null));
