diff --git a/presto-main/src/main/java/com/facebook/presto/operator/project/PageProcessor.java b/presto-main/src/main/java/com/facebook/presto/operator/project/PageProcessor.java
index 979fc2cb80..dd2d90ff70 100644
--- a/presto-main/src/main/java/com/facebook/presto/operator/project/PageProcessor.java
+++ b/presto-main/src/main/java/com/facebook/presto/operator/project/PageProcessor.java
@@ -254,21 +254,30 @@ public class PageProcessor
 
         private void updateRetainedSize()
         {
+            int channelCount = page.getChannelCount();
             // increment the size only when it is the first reference
-            retainedSizeInBytes = Page.INSTANCE_SIZE + SizeOf.sizeOfObjectArray(page.getChannelCount());
+            retainedSizeInBytes = Page.INSTANCE_SIZE + SizeOf.sizeOfObjectArray(channelCount);
             ReferenceCountMap referenceCountMap = new ReferenceCountMap();
-            for (int channel = 0; channel < page.getChannelCount(); channel++) {
+            for (int channel = 0; channel < channelCount; channel++) {
                 Block block = page.getBlock(channel);
-                if (!isNotLoadedLazyBlock(block)) {
+                if (block instanceof LazyBlock) {
+                    if (!((LazyBlock) block).isLoaded()) {
+                        continue;
+                    }
+                }
                 block.retainedBytesForEachPart((object, size) -> {
                     if (referenceCountMap.incrementAndGet(object) == 1) {
                         retainedSizeInBytes += size;
                     }
                 });
             }
-            }
             for (Block previouslyComputedResult : previouslyComputedResults) {
                 if (previouslyComputedResult != null) {
+                    if (previouslyComputedResult instanceof LazyBlock) {
+                        if (!((LazyBlock) previouslyComputedResult).isLoaded()) {
+                            continue;
+                        }
+                    }
                     previouslyComputedResult.retainedBytesForEachPart((object, size) -> {
                         if (referenceCountMap.incrementAndGet(object) == 1) {
                             retainedSizeInBytes += size;
@@ -333,10 +342,7 @@ public class PageProcessor
         return projections;
     }
 
-    private static boolean isNotLoadedLazyBlock(Block block)
-    {
-        return (block instanceof LazyBlock) && !((LazyBlock) block).isLoaded();
-    }
+    
 
     @NotThreadSafe
     private static class DictionarySourceIdFunction
