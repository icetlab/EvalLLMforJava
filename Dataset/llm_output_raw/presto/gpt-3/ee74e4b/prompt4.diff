diff --git a/presto-main/src/main/java/com/facebook/presto/operator/project/PageProcessor.java b/presto-main/src/main/java/com/facebook/presto/operator/project/PageProcessor.java
index 979fc2cb80..5503a2a07f 100644
--- a/presto-main/src/main/java/com/facebook/presto/operator/project/PageProcessor.java
+++ b/presto-main/src/main/java/com/facebook/presto/operator/project/PageProcessor.java
@@ -215,7 +215,7 @@ public class PageProcessor
                 Page resultPage = result.getPage();
 
                 // if we produced a large page or if the expression is expensive, halve the batch size for the next call
-                long pageSize = resultPage.getSizeInBytes();
+                long pageSize = result.getPageSize();
                 if (resultPage.getPositionCount() > 1 && (pageSize > MAX_PAGE_SIZE_IN_BYTES || expressionProfiler.isExpressionExpensive())) {
                     projectBatchSize = projectBatchSize / 2;
                 }
@@ -323,7 +323,7 @@ public class PageProcessor
                     pageProjectWork = null;
                 }
             }
-            return ProcessBatchResult.processBatchSuccess(new Page(positionsBatch.size(), blocks));
+            return ProcessBatchResult.processBatchSuccess(new Page(positionsBatch.size(), blocks), pageSize);
         }
     }
 
@@ -360,26 +360,28 @@ public class PageProcessor
     {
         private final ProcessBatchState state;
         private final Page page;
+        private final long pageSize;
 
-        private ProcessBatchResult(ProcessBatchState state, Page page)
+        private ProcessBatchResult(ProcessBatchState state, Page page, long pageSize)
         {
             this.state = state;
             this.page = page;
+            this.pageSize = pageSize;
         }
 
         public static ProcessBatchResult processBatchYield()
         {
-            return new ProcessBatchResult(ProcessBatchState.YIELD, null);
+            return new ProcessBatchResult(ProcessBatchState.YIELD, null, 0);
         }
 
         public static ProcessBatchResult processBatchTooLarge()
         {
-            return new ProcessBatchResult(ProcessBatchState.PAGE_TOO_LARGE, null);
+            return new ProcessBatchResult(ProcessBatchState.PAGE_TOO_LARGE, null, 0);
         }
 
-        public static ProcessBatchResult processBatchSuccess(Page page)
+        public static ProcessBatchResult processBatchSuccess(Page page, long pageSize)
         {
-            return new ProcessBatchResult(ProcessBatchState.SUCCESS, requireNonNull(page));
+            return new ProcessBatchResult(ProcessBatchState.SUCCESS, requireNonNull(page), pageSize);
         }
 
         public boolean isYieldFinish()
@@ -404,6 +406,11 @@ public class PageProcessor
             return page;
         }
 
+        public long getPageSize()
+        {
+            return pageSize;
+        }
+
         private enum ProcessBatchState
         {
             YIELD,
