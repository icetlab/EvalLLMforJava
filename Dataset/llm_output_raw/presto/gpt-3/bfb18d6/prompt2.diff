diff --git a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java
index cff4f39085..4da8274388 100644
--- a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java
+++ b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java
@@ -1040,7 +1040,10 @@ public final class GeoFunctions
     @SqlType(GEOMETRY_TYPE_NAME)
     public static Slice stIntersection(@SqlType(GEOMETRY_TYPE_NAME) Slice left, @SqlType(GEOMETRY_TYPE_NAME) Slice right)
     {
-        if (deserializeType(left) == GeometrySerializationType.ENVELOPE && deserializeType(right) == GeometrySerializationType.ENVELOPE) {
+        GeometrySerializationType leftType = deserializeType(left);
+        GeometrySerializationType rightType = deserializeType(right);
+        // Cheap case: both envelopes
+        if (leftType == GeometrySerializationType.ENVELOPE && rightType == GeometrySerializationType.ENVELOPE) {
             Envelope leftEnvelope = deserializeEnvelope(left);
             Envelope rightEnvelope = deserializeEnvelope(right);
 
@@ -1064,6 +1067,37 @@ public final class GeoFunctions
             return EsriGeometrySerde.serialize(intersection);
         }
 
+        // Cheap case: one envelope and one geometry
+        if (leftType == GeometrySerializationType.ENVELOPE && rightType != GeometrySerializationType.ENVELOPE) {
+            Envelope leftEnv = deserializeEnvelope(left);
+            if (leftEnv.isEmpty()) {
+                return EMPTY_POLYGON;
+            }
+            Envelope rightEnv = deserializeEnvelope(right);
+            if (!leftEnv.intersect(rightEnv)) {
+                return EMPTY_POLYGON;
+            }
+            // envelope fully contains geometry
+            if (leftEnv.getXMin() <= rightEnv.getXMin() && leftEnv.getYMin() <= rightEnv.getYMin()
+                    && leftEnv.getXMax() >= rightEnv.getXMax() && leftEnv.getYMax() >= rightEnv.getYMax()) {
+                return right;
+            }
+        }
+        if (rightType == GeometrySerializationType.ENVELOPE && leftType != GeometrySerializationType.ENVELOPE) {
+            Envelope rightEnv = deserializeEnvelope(right);
+            if (rightEnv.isEmpty()) {
+                return EMPTY_POLYGON;
+            }
+            Envelope leftEnv2 = deserializeEnvelope(left);
+            if (!rightEnv.intersect(leftEnv2)) {
+                return EMPTY_POLYGON;
+            }
+            if (rightEnv.getXMin() <= leftEnv2.getXMin() && rightEnv.getYMin() <= leftEnv2.getYMin()
+                    && rightEnv.getXMax() >= leftEnv2.getXMax() && rightEnv.getYMax() >= leftEnv2.getYMax()) {
+                return left;
+            }
+        }
+
         OGCGeometry leftGeometry = EsriGeometrySerde.deserialize(left);
         OGCGeometry rightGeometry = EsriGeometrySerde.deserialize(right);
         verifySameSpatialReference(leftGeometry, rightGeometry);
