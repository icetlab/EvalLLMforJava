I added a fast‐path in `readNoFilter` to bulk‐read contiguous, non‐null values without per‐element branching.

```json
[
  {
    "filepath": "../presto/presto-orc/src/main/java/com/facebook/presto/orc/reader/ByteSelectiveStreamReader.java",
    "search": "private int readNoFilter(int[] positions, int positionCount)\n            throws IOException\n    {\n        // filter == null implies outputRequired == true\n        int streamPosition = 0;",
    "replace": "private int readNoFilter(int[] positions, int positionCount)\n            throws IOException\n    {\n        // Fast path: no nulls, no filter, and contiguous positions\n        if (presentStream == null && positions[0] == 0 && positions[positionCount - 1] == positionCount - 1) {\n            for (int i = 0; i < positionCount; i++) {\n                values[i] = dataStream.next();\n            }\n            outputPositionCount = positionCount;\n            return positionCount;\n        }\n\n        // filter == null implies outputRequired == true\n        int streamPosition = 0;"
  }
]
```