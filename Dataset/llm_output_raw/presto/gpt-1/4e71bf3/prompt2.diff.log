I added a fast-path in readNoFilter to bulk-read when there is no null stream, no filter, and positions are a contiguous range starting at zero, avoiding per-element branching.

```json
[
  {
    "filepath": "../presto/presto-orc/src/main/java/com/facebook/presto/orc/reader/ByteSelectiveStreamReader.java",
    "search": "private int readNoFilter(int[] positions, int positionCount)\n            throws IOException\n    {\n        // filter == null implies outputRequired == true\n        int streamPosition = 0;",
    "replace": "private int readNoFilter(int[] positions, int positionCount)\n            throws IOException\n    {\n        // filter == null implies outputRequired == true\n        int streamPosition = 0;\n        // fast path: contiguous positions [0..positionCount-1], no nulls (no presentStream), no filter\n        if (presentStream == null && positionCount > 0 && positions[0] == 0 && positions[positionCount - 1] == positionCount - 1) {\n            for (int i = 0; i < positionCount; i++) {\n                values[i] = dataStream.next();\n            }\n            outputPositionCount = positionCount;\n            return positionCount;\n        }"
  }
]
```