diff --git a/presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayDistinctFunction.java b/presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayDistinctFunction.java
index a25a5916e6..5744a59d89 100644
--- a/presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayDistinctFunction.java
+++ b/presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayDistinctFunction.java
@@ -76,9 +76,28 @@ public final class ArrayDistinctFunction
             return array;
         }
 
-        TypedSet typedSet = new TypedSet(type, array.getPositionCount());
-        BlockBuilder distinctElementBlockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), array.getPositionCount());
-        for (int i = 0; i < array.getPositionCount(); i++) {
+        int count = array.getPositionCount();
+        BlockBuilder distinctElementBlockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), count);
+        // fast path for small arrays
+        if (count <= 16) {
+            for (int i = 0; i < count; i++) {
+                boolean found = false;
+                for (int j = 0; j < i; j++) {
+                    if (type.equalTo(array, i, array, j)) {
+                        found = true;
+                        break;
+                    }
+                }
+                if (!found) {
+                    type.appendTo(array, i, distinctElementBlockBuilder);
+                }
+            }
+            return distinctElementBlockBuilder.build();
+        }
+
+        // fallback to hash-based deduplication
+        TypedSet typedSet = new TypedSet(type, count);
+        for (int i = 0; i < count; i++) {
             if (!typedSet.contains(array, i)) {
                 typedSet.add(array, i);
                 type.appendTo(array, i, distinctElementBlockBuilder);
