diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/reader/BooleanSelectiveStreamReader.java b/presto-orc/src/main/java/com/facebook/presto/orc/reader/BooleanSelectiveStreamReader.java
index aab2765889..e0755fb0e1 100644
--- a/presto-orc/src/main/java/com/facebook/presto/orc/reader/BooleanSelectiveStreamReader.java
+++ b/presto-orc/src/main/java/com/facebook/presto/orc/reader/BooleanSelectiveStreamReader.java
@@ -188,6 +188,8 @@ public class BooleanSelectiveStreamReader
             // - readBooleanNoNull: 0.045 vs.0.029 s/op
             // - readBooleanNoNullWithFilter: 0.112 vs 0.099 s/op
             outputPositionCount = 0;
+                int precedingFilterFails = filter.getPrecedingPositionsToFail();
+                int succeedingFilterFails = filter.getSucceedingPositionsToFail();
             for (int i = 0; i < positionCount; i++) {
                 int position = positions[i];
                 if (position > streamPosition) {
@@ -218,11 +220,11 @@ public class BooleanSelectiveStreamReader
                     }
                 }
 
-                outputPositionCount -= filter.getPrecedingPositionsToFail();
+                outputPositionCount -= precedingFilterFails;
 
                 streamPosition++;
 
-                int succeedingPositionsToFail = filter.getSucceedingPositionsToFail();
+                int succeedingPositionsToFail = succeedingFilterFails;
                 if (succeedingPositionsToFail > 0) {
                     int positionsToSkip = 0;
                     for (int j = 0; j < succeedingPositionsToFail; j++) {
@@ -247,12 +249,14 @@ public class BooleanSelectiveStreamReader
 
         if (nonDeterministicFilter) {
             outputPositionCount = 0;
+                int precedingFilterFails = filter.getPrecedingPositionsToFail();
+                int succeedingFilterFails = filter.getSucceedingPositionsToFail();
             for (int i = 0; i < positionCount; i++) {
                 if (filter.testNull()) {
                     outputPositionCount++;
                 }
                 else {
-                    outputPositionCount -= filter.getPrecedingPositionsToFail();
+                    outputPositionCount -= precedingFilterFails;
                     i += filter.getSucceedingPositionsToFail();
                 }
             }
@@ -262,6 +266,8 @@ public class BooleanSelectiveStreamReader
         }
         else {
             outputPositionCount = 0;
+                int precedingFilterFails = filter.getPrecedingPositionsToFail();
+                int succeedingFilterFails = filter.getSucceedingPositionsToFail();
         }
 
         allNulls = true;
